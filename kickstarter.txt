{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "kickstarter.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6_N-FO-_0mpi"
      },
      "source": [
        "**Problem Statement**\n",
        "\n",
        "Kickstarter wants you to create a study that provides significant insights and helps expose them to and projects and categories they should pay attention to for the upcoming year."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "g_VQ62Rh1d-4"
      },
      "source": [
        "DESCRIPTION\n",
        "\n",
        "**Name**:- It is the respective name of the project.\n",
        "\n",
        "**Main_Category**:- It is the category in which the project falls. For Example:- Music, Food etc.\n",
        "\n",
        "**Category**:- It is the detailed description of main_category, which means it is the sub_category of main_category. For Example:- Drinks, Pop music etc.\n",
        "\n",
        "**Currency**:- Currency used for the project, means whether it is funded in Dollar or Pound.\n",
        "\n",
        "**Launched**:- It tells us the launch date of the project.\n",
        "\n",
        "**Deadline**:- It tells us the last date of the project.\n",
        "\n",
        "**USD_Pledge_Real**:- Amount of money given for the project before deadline, which means USD realised for the project.\n",
        "\n",
        "**USD_Pledge_Goal**:- Amount of money initially asked for the project.\n",
        "\n",
        "**Backers**:- Number of people who supported for the project.\n",
        "\n",
        "**Country**:- It states that from which country the project is.\n",
        "\n",
        "**ID**:- ID of the project.\n",
        "\n",
        "State:- It tells us whether the project was successfull or failure.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8icAVN_uLBAJ"
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import datetime\n",
        "import seaborn as sns\n",
        "from wordcloud import wordcloud, STOPWORDS, ImageColorGenerator"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LWl7s_sjLHoU",
        "outputId": "fe93bf5b-d8c9-4cd6-b83d-07668b5e772b"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "06ADXMGQMu_L"
      },
      "source": [
        "kick = pd.read_csv('/content/drive/MyDrive/kickstarter.csv')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ie_4tqw566Oc"
      },
      "source": [
        "DATA CLEANING"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        },
        "id": "mvm14REXNF-r",
        "outputId": "5df89751-d971-40c5-fba1-25404ac54952"
      },
      "source": [
        "kick.head(5)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>goal</th>\n",
              "      <th>launched</th>\n",
              "      <th>pledged</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd pledged</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000002330</td>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>GBP</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>2015-08-11 12:12:28</td>\n",
              "      <td>0.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1000003930</td>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>2017-09-02 04:43:57</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1000004038</td>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>2013-01-12 00:20:50</td>\n",
              "      <td>220.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1000007540</td>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>USD</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>2012-03-17 03:24:11</td>\n",
              "      <td>1.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1000011046</td>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>19500.0</td>\n",
              "      <td>2015-07-04 08:35:03</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID  ... usd_goal_real\n",
              "0  1000002330  ...       1533.95\n",
              "1  1000003930  ...      30000.00\n",
              "2  1000004038  ...      45000.00\n",
              "3  1000007540  ...       5000.00\n",
              "4  1000011046  ...      19500.00\n",
              "\n",
              "[5 rows x 15 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Aie-siHely0k",
        "outputId": "aff2ff82-6fcd-44a3-feed-e644acf5034c"
      },
      "source": [
        "kick.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ID', 'name', 'category', 'main_category', 'currency', 'deadline',\n",
              "       'goal', 'launched', 'pledged', 'state', 'backers', 'country',\n",
              "       'usd pledged', 'usd_pledged_real', 'usd_goal_real'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tAz7xs2GnVAm",
        "outputId": "e5711dcc-0c25-4349-ecf8-98e4817fa398"
      },
      "source": [
        "len(kick) "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "378661"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 277
        },
        "id": "laKhnJcgNSeo",
        "outputId": "3a195abb-e47f-4185-dc9f-b5f6c0250d70"
      },
      "source": [
        "kick.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>goal</th>\n",
              "      <th>pledged</th>\n",
              "      <th>backers</th>\n",
              "      <th>usd pledged</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3.786610e+05</td>\n",
              "      <td>3.786610e+05</td>\n",
              "      <td>3.786610e+05</td>\n",
              "      <td>378661.000000</td>\n",
              "      <td>3.748640e+05</td>\n",
              "      <td>3.786610e+05</td>\n",
              "      <td>3.786610e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.074731e+09</td>\n",
              "      <td>4.908079e+04</td>\n",
              "      <td>9.682979e+03</td>\n",
              "      <td>105.617476</td>\n",
              "      <td>7.036729e+03</td>\n",
              "      <td>9.058924e+03</td>\n",
              "      <td>4.545440e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.190862e+08</td>\n",
              "      <td>1.183391e+06</td>\n",
              "      <td>9.563601e+04</td>\n",
              "      <td>907.185035</td>\n",
              "      <td>7.863975e+04</td>\n",
              "      <td>9.097334e+04</td>\n",
              "      <td>1.152950e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>5.971000e+03</td>\n",
              "      <td>1.000000e-02</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>5.382635e+08</td>\n",
              "      <td>2.000000e+03</td>\n",
              "      <td>3.000000e+01</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.698000e+01</td>\n",
              "      <td>3.100000e+01</td>\n",
              "      <td>2.000000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.075276e+09</td>\n",
              "      <td>5.200000e+03</td>\n",
              "      <td>6.200000e+02</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>3.947200e+02</td>\n",
              "      <td>6.243300e+02</td>\n",
              "      <td>5.500000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.610149e+09</td>\n",
              "      <td>1.600000e+04</td>\n",
              "      <td>4.076000e+03</td>\n",
              "      <td>56.000000</td>\n",
              "      <td>3.034090e+03</td>\n",
              "      <td>4.050000e+03</td>\n",
              "      <td>1.550000e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.147476e+09</td>\n",
              "      <td>1.000000e+08</td>\n",
              "      <td>2.033899e+07</td>\n",
              "      <td>219382.000000</td>\n",
              "      <td>2.033899e+07</td>\n",
              "      <td>2.033899e+07</td>\n",
              "      <td>1.663614e+08</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 ID          goal  ...  usd_pledged_real  usd_goal_real\n",
              "count  3.786610e+05  3.786610e+05  ...      3.786610e+05   3.786610e+05\n",
              "mean   1.074731e+09  4.908079e+04  ...      9.058924e+03   4.545440e+04\n",
              "std    6.190862e+08  1.183391e+06  ...      9.097334e+04   1.152950e+06\n",
              "min    5.971000e+03  1.000000e-02  ...      0.000000e+00   1.000000e-02\n",
              "25%    5.382635e+08  2.000000e+03  ...      3.100000e+01   2.000000e+03\n",
              "50%    1.075276e+09  5.200000e+03  ...      6.243300e+02   5.500000e+03\n",
              "75%    1.610149e+09  1.600000e+04  ...      4.050000e+03   1.550000e+04\n",
              "max    2.147476e+09  1.000000e+08  ...      2.033899e+07   1.663614e+08\n",
              "\n",
              "[8 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gsf5WMF78YKW",
        "outputId": "9e0237d9-c9f7-4d08-8d1e-bb9591975729"
      },
      "source": [
        "kick.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 378661 entries, 0 to 378660\n",
            "Data columns (total 15 columns):\n",
            " #   Column            Non-Null Count   Dtype  \n",
            "---  ------            --------------   -----  \n",
            " 0   ID                378661 non-null  int64  \n",
            " 1   name              378657 non-null  object \n",
            " 2   category          378661 non-null  object \n",
            " 3   main_category     378661 non-null  object \n",
            " 4   currency          378661 non-null  object \n",
            " 5   deadline          378661 non-null  object \n",
            " 6   goal              378661 non-null  float64\n",
            " 7   launched          378661 non-null  object \n",
            " 8   pledged           378661 non-null  float64\n",
            " 9   state             378661 non-null  object \n",
            " 10  backers           378661 non-null  int64  \n",
            " 11  country           378661 non-null  object \n",
            " 12  usd pledged       374864 non-null  float64\n",
            " 13  usd_pledged_real  378661 non-null  float64\n",
            " 14  usd_goal_real     378661 non-null  float64\n",
            "dtypes: float64(5), int64(2), object(8)\n",
            "memory usage: 43.3+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Hnfix96gNqGM",
        "outputId": "fa9b8749-3eae-42fb-f141-acaa5927dba8"
      },
      "source": [
        "kick.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(378661, 15)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z4f7fGSMOJvC",
        "outputId": "66f3e175-48c4-4270-8628-9f96f219cb17"
      },
      "source": [
        "kick['state'].head(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        failed\n",
              "1        failed\n",
              "2        failed\n",
              "3        failed\n",
              "4      canceled\n",
              "5    successful\n",
              "6    successful\n",
              "7        failed\n",
              "8      canceled\n",
              "9      canceled\n",
              "Name: state, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "0WCEHNb4QI3g",
        "outputId": "7194e9d2-0b14-4d0d-99a9-2dd06dd2d459"
      },
      "source": [
        "kick[['state','usd_pledged_real','usd_goal_real']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>state</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>failed</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>failed</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>failed</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>failed</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>canceled</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378656</th>\n",
              "      <td>canceled</td>\n",
              "      <td>25.0</td>\n",
              "      <td>50000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378657</th>\n",
              "      <td>failed</td>\n",
              "      <td>155.0</td>\n",
              "      <td>1500.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378658</th>\n",
              "      <td>failed</td>\n",
              "      <td>20.0</td>\n",
              "      <td>15000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378659</th>\n",
              "      <td>failed</td>\n",
              "      <td>200.0</td>\n",
              "      <td>15000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378660</th>\n",
              "      <td>failed</td>\n",
              "      <td>524.0</td>\n",
              "      <td>2000.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>378661 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "           state  usd_pledged_real  usd_goal_real\n",
              "0         failed               0.0        1533.95\n",
              "1         failed            2421.0       30000.00\n",
              "2         failed             220.0       45000.00\n",
              "3         failed               1.0        5000.00\n",
              "4       canceled            1283.0       19500.00\n",
              "...          ...               ...            ...\n",
              "378656  canceled              25.0       50000.00\n",
              "378657    failed             155.0        1500.00\n",
              "378658    failed              20.0       15000.00\n",
              "378659    failed             200.0       15000.00\n",
              "378660    failed             524.0        2000.00\n",
              "\n",
              "[378661 rows x 3 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "FIh_5BJe-Y9Z",
        "outputId": "484c51a3-fbce-4a20-ccab-1e2b655b2360"
      },
      "source": [
        "kick[['launched','deadline']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>launched</th>\n",
              "      <th>deadline</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2015-08-11 12:12:28</td>\n",
              "      <td>2015-10-09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-09-02 04:43:57</td>\n",
              "      <td>2017-11-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-12 00:20:50</td>\n",
              "      <td>2013-02-26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-03-17 03:24:11</td>\n",
              "      <td>2012-04-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2015-07-04 08:35:03</td>\n",
              "      <td>2015-08-29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378656</th>\n",
              "      <td>2014-09-17 02:35:30</td>\n",
              "      <td>2014-10-17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378657</th>\n",
              "      <td>2011-06-22 03:35:14</td>\n",
              "      <td>2011-07-19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378658</th>\n",
              "      <td>2010-07-01 19:40:30</td>\n",
              "      <td>2010-08-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378659</th>\n",
              "      <td>2016-01-13 18:13:53</td>\n",
              "      <td>2016-02-13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378660</th>\n",
              "      <td>2011-07-19 09:07:47</td>\n",
              "      <td>2011-08-16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>378661 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                   launched    deadline\n",
              "0       2015-08-11 12:12:28  2015-10-09\n",
              "1       2017-09-02 04:43:57  2017-11-01\n",
              "2       2013-01-12 00:20:50  2013-02-26\n",
              "3       2012-03-17 03:24:11  2012-04-16\n",
              "4       2015-07-04 08:35:03  2015-08-29\n",
              "...                     ...         ...\n",
              "378656  2014-09-17 02:35:30  2014-10-17\n",
              "378657  2011-06-22 03:35:14  2011-07-19\n",
              "378658  2010-07-01 19:40:30  2010-08-16\n",
              "378659  2016-01-13 18:13:53  2016-02-13\n",
              "378660  2011-07-19 09:07:47  2011-08-16\n",
              "\n",
              "[378661 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LHxACR0v8OS-"
      },
      "source": [
        "DataTypes\n",
        "\n",
        "The head looks good! A closer look at the date columns shows that there is a time stamp for the \"launched\" column, but it is not for the deadline column so i will fix that first and will make sure that both the columns are in the datetime format."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JTw5EuWfNhIE",
        "outputId": "57c808e9-f623-4173-f0b6-ba8634c99c54"
      },
      "source": [
        "kick.dtypes"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                    int64\n",
              "name                 object\n",
              "category             object\n",
              "main_category        object\n",
              "currency             object\n",
              "deadline             object\n",
              "goal                float64\n",
              "launched             object\n",
              "pledged             float64\n",
              "state                object\n",
              "backers               int64\n",
              "country              object\n",
              "usd pledged         float64\n",
              "usd_pledged_real    float64\n",
              "usd_goal_real       float64\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-F-Sa3t4_b5O"
      },
      "source": [
        "**Converting launched and deadline column into datetime dtype.**\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vMZ4GwVEbRNV"
      },
      "source": [
        "kick.deadline = pd.to_datetime(kick.deadline, errors= 'coerce', format=\"%Y/%m/%d\").dt.date\n",
        "kick.launched = pd.to_datetime(kick.launched, errors='coerce', format=\"%Y/%m/%d\").dt.date"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "jhRq329tDdPJ",
        "outputId": "46c170f6-4ec6-4daf-e107-e70d789d203e"
      },
      "source": [
        "kick[['launched', 'deadline']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>launched</th>\n",
              "      <th>deadline</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>2015-10-09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>2017-11-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>2013-02-26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>2012-04-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>2015-08-29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378656</th>\n",
              "      <td>2014-09-17</td>\n",
              "      <td>2014-10-17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378657</th>\n",
              "      <td>2011-06-22</td>\n",
              "      <td>2011-07-19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378658</th>\n",
              "      <td>2010-07-01</td>\n",
              "      <td>2010-08-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378659</th>\n",
              "      <td>2016-01-13</td>\n",
              "      <td>2016-02-13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378660</th>\n",
              "      <td>2011-07-19</td>\n",
              "      <td>2011-08-16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>378661 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "          launched    deadline\n",
              "0       2015-08-11  2015-10-09\n",
              "1       2017-09-02  2017-11-01\n",
              "2       2013-01-12  2013-02-26\n",
              "3       2012-03-17  2012-04-16\n",
              "4       2015-07-04  2015-08-29\n",
              "...            ...         ...\n",
              "378656  2014-09-17  2014-10-17\n",
              "378657  2011-06-22  2011-07-19\n",
              "378658  2010-07-01  2010-08-16\n",
              "378659  2016-01-13  2016-02-13\n",
              "378660  2011-07-19  2011-08-16\n",
              "\n",
              "[378661 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        },
        "id": "mvwf-ioh9aWE",
        "outputId": "149acda9-d402-4071-f873-2fda5b2e7be7"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>goal</th>\n",
              "      <th>launched</th>\n",
              "      <th>pledged</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd pledged</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000002330</td>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>GBP</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>1000.0</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>0.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1000003930</td>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>100.0</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1000004038</td>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>220.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1000007540</td>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>USD</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>1.0</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1000011046</td>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>19500.0</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID  ... usd_goal_real\n",
              "0  1000002330  ...       1533.95\n",
              "1  1000003930  ...      30000.00\n",
              "2  1000004038  ...      45000.00\n",
              "3  1000007540  ...       5000.00\n",
              "4  1000011046  ...      19500.00\n",
              "\n",
              "[5 rows x 15 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8ALrYT9wMg8j",
        "outputId": "863cbe71-fb77-4083-830b-d4d204de42f3"
      },
      "source": [
        "kick.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                     0\n",
              "name                   4\n",
              "category               0\n",
              "main_category          0\n",
              "currency               0\n",
              "deadline               0\n",
              "goal                   0\n",
              "launched               0\n",
              "pledged                0\n",
              "state                  0\n",
              "backers                0\n",
              "country                0\n",
              "usd pledged         3797\n",
              "usd_pledged_real       0\n",
              "usd_goal_real          0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "FTKiK2z9BpiF",
        "outputId": "86932da4-1784-479d-fc50-0afe0eb7ab67"
      },
      "source": [
        "kick[['launched','deadline']]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>launched</th>\n",
              "      <th>deadline</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>2015-10-09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>2017-11-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>2013-02-26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>2012-04-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>2015-08-29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378656</th>\n",
              "      <td>2014-09-17</td>\n",
              "      <td>2014-10-17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378657</th>\n",
              "      <td>2011-06-22</td>\n",
              "      <td>2011-07-19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378658</th>\n",
              "      <td>2010-07-01</td>\n",
              "      <td>2010-08-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378659</th>\n",
              "      <td>2016-01-13</td>\n",
              "      <td>2016-02-13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378660</th>\n",
              "      <td>2011-07-19</td>\n",
              "      <td>2011-08-16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>378661 rows × 2 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "          launched    deadline\n",
              "0       2015-08-11  2015-10-09\n",
              "1       2017-09-02  2017-11-01\n",
              "2       2013-01-12  2013-02-26\n",
              "3       2012-03-17  2012-04-16\n",
              "4       2015-07-04  2015-08-29\n",
              "...            ...         ...\n",
              "378656  2014-09-17  2014-10-17\n",
              "378657  2011-06-22  2011-07-19\n",
              "378658  2010-07-01  2010-08-16\n",
              "378659  2016-01-13  2016-02-13\n",
              "378660  2011-07-19  2011-08-16\n",
              "\n",
              "[378661 rows x 2 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dh2yRh2MCTTy"
      },
      "source": [
        "**Checking for the Null Data**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jLwooMQ0BxUP",
        "outputId": "a36d22f2-b42f-4f95-c470-436e529a0c08"
      },
      "source": [
        "kick.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                     0\n",
              "name                   4\n",
              "category               0\n",
              "main_category          0\n",
              "currency               0\n",
              "deadline               0\n",
              "goal                   0\n",
              "launched               0\n",
              "pledged                0\n",
              "state                  0\n",
              "backers                0\n",
              "country                0\n",
              "usd pledged         3797\n",
              "usd_pledged_real       0\n",
              "usd_goal_real          0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IPGBNCK0DGZC"
      },
      "source": [
        "We found out that the usd pledge column has a large number of null values and the values from the usd pledge doesn't have accurate information or conversion. But instead the usd_pledge_real contains more accurate information then the usd pledge, so it gives me the strong and good reason to drop the usd pledge column entirely."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iQS-G-ZKC4nk"
      },
      "source": [
        "kick.drop('usd pledged',axis=1,inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "C1txTW5PGIbW"
      },
      "source": [
        "I am also going to drop the \"pledge\" and \"goal\" column because this columns seem to be the redundant considering we already have the converted columns."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9rzo5LKWFpNJ"
      },
      "source": [
        "kick.drop('pledged',axis=1,inplace=True)\n",
        "kick.drop('goal',axis=1,inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "IFzWhG8OHICP",
        "outputId": "530a63f6-ad90-4b91-b74c-f05a7d67afc1"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000002330</td>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>GBP</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1000003930</td>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1000004038</td>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1000007540</td>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>USD</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1000011046</td>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID  ... usd_goal_real\n",
              "0  1000002330  ...       1533.95\n",
              "1  1000003930  ...      30000.00\n",
              "2  1000004038  ...      45000.00\n",
              "3  1000007540  ...       5000.00\n",
              "4  1000011046  ...      19500.00\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pdlNTJpjH6Rk"
      },
      "source": [
        "Now Treating the null values of the \"name\" column which is 4. Now droping the 4 null values will not make any impact on dataset because we have a large number of dataset, thats why we can drop the null values of the \"name\" column."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7-g18knzIakF"
      },
      "source": [
        "kick = kick.dropna()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "of19kWsNIlM3",
        "outputId": "e1be3986-d4c6-4036-c058-0e1deabf999f"
      },
      "source": [
        "kick.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                  0\n",
              "name                0\n",
              "category            0\n",
              "main_category       0\n",
              "currency            0\n",
              "deadline            0\n",
              "launched            0\n",
              "state               0\n",
              "backers             0\n",
              "country             0\n",
              "usd_pledged_real    0\n",
              "usd_goal_real       0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KVEc-mCuI2FS"
      },
      "source": [
        "Duplicate\n",
        "\n",
        "Now we will check for the duplicate values from the dataset becaues we have a huge dataset. Generally huge dataset consist some dupicate data, so i want to be conscious of duplicates."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 47
        },
        "id": "ZpcKspAsIsDr",
        "outputId": "6ec66af6-eb0e-48ab-eafa-6fb7ea9ff63a"
      },
      "source": [
        "kick[kick['ID'].duplicated() == True] # checking for duplicate in id column."
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [ID, name, category, main_category, currency, deadline, launched, state, backers, country, usd_pledged_real, usd_goal_real]\n",
              "Index: []"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "xmthtnU5OTzf",
        "outputId": "cb8723a7-189f-42df-dfc2-bc0df75623c6"
      },
      "source": [
        "kick[kick['name'].duplicated() == True] # checking for duplicate in name column."
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6379</th>\n",
              "      <td>1032645935</td>\n",
              "      <td>Cancelled (Canceled)</td>\n",
              "      <td>Design</td>\n",
              "      <td>Design</td>\n",
              "      <td>USD</td>\n",
              "      <td>2015-06-05</td>\n",
              "      <td>2015-05-06</td>\n",
              "      <td>canceled</td>\n",
              "      <td>17</td>\n",
              "      <td>US</td>\n",
              "      <td>3105.00</td>\n",
              "      <td>100000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7743</th>\n",
              "      <td>1039093987</td>\n",
              "      <td>New EP/Music Development</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>USD</td>\n",
              "      <td>2016-01-07</td>\n",
              "      <td>2015-11-24</td>\n",
              "      <td>undefined</td>\n",
              "      <td>0</td>\n",
              "      <td>N,0\"</td>\n",
              "      <td>257.00</td>\n",
              "      <td>3800.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8356</th>\n",
              "      <td>1042208764</td>\n",
              "      <td>The Basement</td>\n",
              "      <td>Horror</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2015-05-07</td>\n",
              "      <td>2015-04-07</td>\n",
              "      <td>successful</td>\n",
              "      <td>106</td>\n",
              "      <td>US</td>\n",
              "      <td>12311.00</td>\n",
              "      <td>12000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8448</th>\n",
              "      <td>1042642941</td>\n",
              "      <td>The Gift</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2013-05-08</td>\n",
              "      <td>2013-04-17</td>\n",
              "      <td>successful</td>\n",
              "      <td>37</td>\n",
              "      <td>US</td>\n",
              "      <td>3370.00</td>\n",
              "      <td>3000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8761</th>\n",
              "      <td>1044230780</td>\n",
              "      <td>Redemption</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2012-08-25</td>\n",
              "      <td>2012-06-26</td>\n",
              "      <td>successful</td>\n",
              "      <td>67</td>\n",
              "      <td>US</td>\n",
              "      <td>11440.00</td>\n",
              "      <td>11000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378140</th>\n",
              "      <td>997542782</td>\n",
              "      <td>Innocent Sin</td>\n",
              "      <td>Indie Rock</td>\n",
              "      <td>Music</td>\n",
              "      <td>USD</td>\n",
              "      <td>2015-01-25</td>\n",
              "      <td>2014-12-26</td>\n",
              "      <td>successful</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>600.00</td>\n",
              "      <td>300.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378224</th>\n",
              "      <td>997919903</td>\n",
              "      <td>Grassroots</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>EUR</td>\n",
              "      <td>2017-09-14</td>\n",
              "      <td>2017-08-15</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>IE</td>\n",
              "      <td>25.12</td>\n",
              "      <td>11963.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378426</th>\n",
              "      <td>998836498</td>\n",
              "      <td>The InAction</td>\n",
              "      <td>Camera Equipment</td>\n",
              "      <td>Technology</td>\n",
              "      <td>USD</td>\n",
              "      <td>2016-07-29</td>\n",
              "      <td>2016-06-28</td>\n",
              "      <td>canceled</td>\n",
              "      <td>5</td>\n",
              "      <td>US</td>\n",
              "      <td>670.00</td>\n",
              "      <td>80000.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378475</th>\n",
              "      <td>999055513</td>\n",
              "      <td>The Last Hurrah</td>\n",
              "      <td>Rock</td>\n",
              "      <td>Music</td>\n",
              "      <td>USD</td>\n",
              "      <td>2012-06-03</td>\n",
              "      <td>2012-05-04</td>\n",
              "      <td>successful</td>\n",
              "      <td>69</td>\n",
              "      <td>US</td>\n",
              "      <td>7665.00</td>\n",
              "      <td>5500.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>378548</th>\n",
              "      <td>999410766</td>\n",
              "      <td>Guilt</td>\n",
              "      <td>Shorts</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>USD</td>\n",
              "      <td>2014-05-16</td>\n",
              "      <td>2014-04-16</td>\n",
              "      <td>failed</td>\n",
              "      <td>7</td>\n",
              "      <td>US</td>\n",
              "      <td>791.00</td>\n",
              "      <td>65000.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2893 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                ID                      name  ... usd_pledged_real usd_goal_real\n",
              "6379    1032645935      Cancelled (Canceled)  ...          3105.00     100000.00\n",
              "7743    1039093987  New EP/Music Development  ...           257.00       3800.00\n",
              "8356    1042208764              The Basement  ...         12311.00      12000.00\n",
              "8448    1042642941                  The Gift  ...          3370.00       3000.00\n",
              "8761    1044230780                Redemption  ...         11440.00      11000.00\n",
              "...            ...                       ...  ...              ...           ...\n",
              "378140   997542782              Innocent Sin  ...           600.00        300.00\n",
              "378224   997919903                Grassroots  ...            25.12      11963.01\n",
              "378426   998836498              The InAction  ...           670.00      80000.00\n",
              "378475   999055513           The Last Hurrah  ...          7665.00       5500.00\n",
              "378548   999410766                     Guilt  ...           791.00      65000.00\n",
              "\n",
              "[2893 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ehW-5H9tOhu6",
        "outputId": "b81f852d-eb0b-4afc-db96-b5096218fbf3"
      },
      "source": [
        "len(kick[kick['name'] == \"Cancelled (Canceled)\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cG6ZA8RdPGrT",
        "outputId": "9cd21071-3a9b-44d0-c0b1-22896f7290cf"
      },
      "source": [
        "len(kick[kick['name'] == \"New EP/Music Development\"])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "41"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c81nRKigQFVf"
      },
      "source": [
        "It looks like there arent any duplicate data for the \"ID\" column which is good sir! But there are duplicates in the name category but i dont think so that there projects might be same, its difficult to get over that more than 41 persons name there project \"New EP/Music Development\".But for now i will leave it here."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hQlLU9iaPoMr"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FKNTSP7GRWqA"
      },
      "source": [
        "Misentered Data Check"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3phm4zYXRbXO",
        "outputId": "aacfd1ac-2cd8-4cd0-dfb9-6a38818c2830"
      },
      "source": [
        "kick.country.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "US      292624\n",
              "GB       33671\n",
              "CA       14756\n",
              "AU        7839\n",
              "DE        4171\n",
              "N,0\"      3797\n",
              "FR        2939\n",
              "IT        2878\n",
              "NL        2868\n",
              "ES        2276\n",
              "SE        1757\n",
              "MX        1752\n",
              "NZ        1447\n",
              "DK        1113\n",
              "IE         811\n",
              "CH         761\n",
              "NO         708\n",
              "HK         618\n",
              "BE         617\n",
              "AT         597\n",
              "SG         555\n",
              "LU          62\n",
              "JP          40\n",
              "Name: country, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IgDYFw3FTQSd"
      },
      "source": [
        "Since other countries are ok in the column but i cant find out what does the (N,0\") represents i had even googled and looked for the country but i dint found anything like it or related to it.\n",
        "So i decided to remove that value_data from the dataset."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KcLf0U6-TNrE"
      },
      "source": [
        "kick = kick[kick.country != 'N,0\"']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vg0ZSzNtUQE4",
        "outputId": "0c02ff6b-9d82-4e86-c209-34e21912bc3d"
      },
      "source": [
        "kick.country.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "US    292624\n",
              "GB     33671\n",
              "CA     14756\n",
              "AU      7839\n",
              "DE      4171\n",
              "FR      2939\n",
              "IT      2878\n",
              "NL      2868\n",
              "ES      2276\n",
              "SE      1757\n",
              "MX      1752\n",
              "NZ      1447\n",
              "DK      1113\n",
              "IE       811\n",
              "CH       761\n",
              "NO       708\n",
              "HK       618\n",
              "BE       617\n",
              "AT       597\n",
              "SG       555\n",
              "LU        62\n",
              "JP        40\n",
              "Name: country, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eKqfN8YMZXEv"
      },
      "source": [
        "Checking my Numerical Data Columns"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bnNBrp04ZlFp"
      },
      "source": [
        "I am going to check my numerical data columns on histogram to get a better idea about my numerical columns. "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 918
        },
        "id": "VGEpuF8dUdGb",
        "outputId": "2a8e1e91-4f29-438f-a7ed-5917de2fdbde"
      },
      "source": [
        "kick.hist(figsize=(16,14))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7ffa7e65e208>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7ffa7e632470>],\n",
              "       [<matplotlib.axes._subplots.AxesSubplot object at 0x7ffa7e5e76d8>,\n",
              "        <matplotlib.axes._subplots.AxesSubplot object at 0x7ffa7e59b940>]],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x1008 with 4 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jlXcGgyaal0M"
      },
      "source": [
        "Looking at the output of Numerical data columns our data doesn't seems to be the normally distrubuted. The \"usd_pledged\", \"usd_goal\" and \"backers\" have heavily weighted to zero."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ea5if-8XaJZr",
        "outputId": "6f2ea767-1b87-4b3d-a330-2fe7ebba313e"
      },
      "source": [
        "(kick.backers == 0).sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "51811"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8GQlXSMMeuBK"
      },
      "source": [
        "As you can see there are more than 51000+ projects with zero backers , which counts roughly 15% of the data. But that a lot of data, which can provide as interesting insights why the people from kickstarters are not being successfull at all, so we will keep it as it is."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "GWUGH79pesuv",
        "outputId": "1ba5a6e5-cf6d-4805-ab90-1f76bd075928"
      },
      "source": [
        "np.log(kick.usd_goal_real + 1).hist()    # Histogram of log transformed usd goal real\n",
        "plt.title(\"Distribution of USD Goal Real\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "U-5O6hfVjdbD"
      },
      "source": [
        "The shape of the USD goal looks lot more standardized.So i will remember to transform my numerical variables prior to classification.\n",
        "I will not standardized my data before EDA, because i want to take a look at the actual numerical figures of the data to get a better understanding and idea."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y7l9hBlJi1Mp",
        "outputId": "53162c24-c763-4d98-9ee2-cbe8f716c01b"
      },
      "source": [
        "kick.backers.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    374860.000000\n",
              "mean        106.688366\n",
              "std         911.710124\n",
              "min           0.000000\n",
              "25%           2.000000\n",
              "50%          12.000000\n",
              "75%          57.000000\n",
              "max      219382.000000\n",
              "Name: backers, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J0dYH6E-pbJl"
      },
      "source": [
        "**Performing EDA(Explorartory Data Analysis)**\n",
        "\n",
        "My first step will be to examine my categorical data.\n",
        "\n",
        "First i will Distribute the main_category to get the better understanding of the feature.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_9Hk5s80x5I7",
        "outputId": "49ed0780-9639-417d-daed-2702c889f2e7"
      },
      "source": [
        "kick.main_category.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Film & Video    62696\n",
              "Music           49530\n",
              "Publishing      39379\n",
              "Games           35225\n",
              "Technology      32562\n",
              "Design          30066\n",
              "Art             28152\n",
              "Food            24599\n",
              "Fashion         22812\n",
              "Theater         10912\n",
              "Comics          10819\n",
              "Photography     10778\n",
              "Crafts           8809\n",
              "Journalism       4754\n",
              "Dance            3767\n",
              "Name: main_category, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 503
        },
        "id": "shLDUXdUpMSl",
        "outputId": "ca4f53be-056d-44bb-f2e8-e8a493c19113"
      },
      "source": [
        "sns.set_style('whitegrid')\n",
        "maincat = kick.main_category.value_counts()\n",
        "\n",
        "\n",
        "fig = plt.figure(dpi=120)\n",
        "ax = fig.add_subplot(111)\n",
        "ax = sns.barplot(y=maincat.index, x=maincat.values, palette='rocket', alpha=0.8)\n",
        "\n",
        "plt.title(' Distribution of Main Categories \\n ')\n",
        "ax.set(xlabel='Number of Campaigns', ylabel='Categories')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x480 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ljsayqiz0W1t",
        "outputId": "c1dfc0cd-da13-479e-e27a-f43969276baf"
      },
      "source": [
        "kick.category.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Product Design     22310\n",
              "Documentary        16138\n",
              "Tabletop Games     14178\n",
              "Music              13340\n",
              "Shorts             12357\n",
              "                   ...  \n",
              "Residencies           69\n",
              "Letterpress           49\n",
              "Chiptune              35\n",
              "Literary Spaces       27\n",
              "Taxidermy             13\n",
              "Name: category, Length: 159, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_vsSQyXmyeAo"
      },
      "source": [
        "There where only 15 main categories, but there are 159 sub_categories in total. so i decided to just take the top 15."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        },
        "id": "E1APW_zozmS4",
        "outputId": "36818b8e-c96b-4e65-896a-988eff2dc817"
      },
      "source": [
        "subcat = kick.category.value_counts().head(15)\n",
        "fig = plt.figure(dpi=120)\n",
        "ax = fig.add_subplot(111)\n",
        "ax = sns.barplot(y=subcat.index, x=subcat.values, palette=\"vlag\", alpha=0.8)\n",
        "\n",
        "plt.title('\\n Top 15 sub_category count \\n ')\n",
        "ax.set(xlabel='Number of Campaigns', ylabel='Sub-Categories')\n",
        "plt.show() "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x480 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xaGRPl3u2rGF"
      },
      "source": [
        "In this neither the distribution of data between the main category nor the distribution of sub-categories are evenly spread. I have also noticed a decent amount of overlap between the main category and the sub-category with music, food, flim and videos, amoung others appearing in both the list."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 503
        },
        "id": "86RtN7Wwxkzj",
        "outputId": "28d9adc7-2e0f-4c26-a67e-1df23e08c0d4"
      },
      "source": [
        "sns.set_style('whitegrid')\n",
        "maincat = kick.country.value_counts()\n",
        "\n",
        "\n",
        "fig = plt.figure(dpi=120)\n",
        "ax = fig.add_subplot(111)\n",
        "ax = sns.barplot(y=maincat.index, x=maincat.values, palette='rocket', alpha=0.8)\n",
        "\n",
        "plt.title(' Distribution of Countries \\n ')\n",
        "ax.set(xlabel='Number of Campaigns', ylabel='Countries')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x480 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "T-LNxoooTkd9"
      },
      "source": [
        "Here, I tried to check the distribution of country column to gain some information from it. We found that the US country and GB country dominate most over the country which gives us some idea about data, which is somewhere related to success."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 503
        },
        "id": "veScwes3Q5q5",
        "outputId": "13ae9337-ac15-48ef-eab3-458ac6cec6c7"
      },
      "source": [
        "  sns.set_style('whitegrid')\n",
        "maincat = kick.state.value_counts()\n",
        "\n",
        "\n",
        "fig = plt.figure(dpi=120)\n",
        "ax = fig.add_subplot(111)\n",
        "ax = sns.barplot(y=maincat.index, x=maincat.values, palette='rocket', alpha=0.8)\n",
        "\n",
        "plt.title(' Distribution of States \\n ')\n",
        "ax.set(xlabel='Number of Campaigns', ylabel='States')\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x480 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RLolyKBNWXvp"
      },
      "source": [
        "Now here i tried to check the distribution of \" State \" column here as we can see that the failed distribution is dominating, this is the reason we are solving this problem to know why this projects are getting failed more than success.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0nY6Fb-tWA8o"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dD3_hgt2Xqnw"
      },
      "source": [
        "**PIE** **CHART**\n",
        "\n",
        "As i want to see how much percent failed and success are taking we will see the \" State \" column in pie chart, to get a better understanding of \"state\" column."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 627
        },
        "id": "DQuBHkRUXraT",
        "outputId": "b5002252-8905-43a3-c268-4e09650e36b7"
      },
      "source": [
        "state = kick.state.value_counts()\n",
        "\n",
        "# pie chart\n",
        "labels = state.index \n",
        "sizes = state.values\n",
        "colors = ['Green', 'Magenta', 'Orange', 'LightPink', 'Yellow', 'SkyBlue']\n",
        "explode = [0,0,.1, .2, .4]\n",
        "\n",
        "fig1, ax1 =plt.subplots(figsize =(8,8))\n",
        "\n",
        "patches, texts, autotexts, = ax1.pie(sizes, colors = colors, startangle =90, autopct = '%0.2f%%', explode =explode, textprops ={'fontsize':20 })\n",
        "\n",
        "ax1.axis('equal')\n",
        "plt.tight_layout()\n",
        "plt.legend(labels, loc =2, borderpad =0.05, fontsize = 14, bbox_to_anchor=(1,1))\n",
        "plt.title('\\n Distribution of States', fontsize = 20)\n",
        "\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAArQAAAJjCAYAAAD9BYJNAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzde3zO9f/H8ccO145mThsRYrU5DA3D0Nf5kFKE8hVTCDkk1S8i5eubpqI5l+pLTh3EUBHlkFNOJZScT5uNObNru3a8rt8fl102O2JcG8/77Xbd2j7H93VN1557X6/3++1gsVgsiIiIiIgUUY72boCIiIiIyO1QoBURERGRIk2BVkRERESKNAVaERERESnSFGhFREREpEhToBURERGRIk2BVkRERESKNAVaERERESnSFGhFREREpEhToBURERGRIk2BVkRERESKNAVaERERESnSFGhFREREpEhToBURERGRIk2BVkRERESKNAVaERERESnSFGhFREREpEhToBURERGRIk2BVkRERESKNAVaERERESnSFGhFREREpEhToBURERGRIk2BVkRERESKNAVaERERESnSFGhFREREpEhToBURERGRIk2BVkRERESKNAVaERERESnSFGhFshEREUFAQAARERF2uf/27dsJCAhg2rRpmbb36tWLgIAAu7Qpnb1fm4KSkpLC1KlTadu2LYGBgQQEBLBmzRp7N0tERG6Bs70bIHKnjBw5kqVLl9q+d3R0xMPDg5IlS+Lv70/jxo154oknKFmyZIHfe9q0aUyfPp158+bRsGHDAr/+nbR9+3ZCQ0MZMmQIQ4cOtXdz7pg5c+YwY8YMgoODefzxx3F2dqZKlSp5nrd3717mzp3Lrl27OHfuHC4uLpQqVYqHH36YevXq8fzzz+Ph4WE7PiAggAYNGjB//vwCaXevXr3YsWMHBw8eLJDriYjcCxRo5Z7XqlUrqlevDkB8fDynT5/mjz/+YO3atYSHhzN69GieeeaZTOe0adOGOnXq4Ovra48mU7t2bVauXHlHwvbtsvdrU1DWr1+Ph4cHs2fPxsXFJV/nLF++nJEjR2KxWGjUqBGtW7fGzc2NmJgY/vjjD9avX0/btm2pXLnyHW69iIhkpEAr97zWrVtnCaypqaksWbKE8ePH89Zbb+Hi4sKTTz5p2+/l5YWXl9fdbqqNu7s7fn5+drt/buz92hSUs2fPUrJkyXyHWZPJxLhx43BwcGD27NmEhIRkOWbXrl2F8o8QEZF7nWpo5b7k7OzMc889x7vvvgvAhAkTSExMtO3PqU70wIEDvPbaa7Rs2ZLAwEAaNWpE586dGT9+PCkpKQC0bNmS6dOnAxAaGkpAQIDtkW7kyJEEBAQQFRXF/Pnz6dixI7Vr16ZXr15AzjW06ZKTkwkPD7e1o3Xr1kyfPp3k5ORMx506dYqAgABGjhyZ7XVurMkdOXIkoaGhAEyfPj1T27dv357rawPw999/M3ToUEJCQggMDKRFixaMHTuWs2fPZjk2/TU4deoU33zzDR07dqRWrVo0btyYMWPGEBcXl22bcxIXF8ekSZNo164dtWrVIjg4mL59+/Lbb7/leN/o6Gjb82vZsmWu1z98+DBGo5FHHnkk2zALULduXYoXLw5cf50AduzYkem1zPhzjYiIYOjQobRq1YratWtTt25dunfvzvLlyzNdO/1nuWPHDoBM10v/d5PuzJkzjBs3jlatWhEYGEjDhg0ZOHAge/fuzdJmo9HIjBkzePLJJ6lbty5BQUG0bt2aV199lb///jvX10REpLBQD63c1zp37syMGTOIjo5m27ZtNG/ePMdjDxw4wLPPPouDgwMtW7bkwQcfxGg0EhkZyddff82rr76KwWAgNDSUtWvXsmPHDjp37kyFChVyvOb48eP5/fffadasGc2aNcPJySlf7R42bBh//fUX7du3x9nZmbVr1zJt2jT+/vtvPvnkExwcHG72pQCsvdkAS5cupUGDBjRo0MC2L7fnAdaP8NNrbtu1a0f58uXZt28fX3/9NWvXruWrr76iYsWKWc776KOP2Lx5My1atKBJkyZs376dRYsWcfLkSebNm5evdl+9epV///vfHDlyhFq1atG7d28uXbrETz/9RJ8+fRg7dizdu3e3PccKFSowd+5cAHr37g2QZ69ziRIlAGvPbkJCQqY62exUr16dIUOGMH36dCpUqEDnzp1t+zK+rmPHjuXhhx8mODgYHx8fLl++zIYNG3jzzTc5fvw4r776KgDFixdnyJAhLF26lOjoaIYMGWK7Rsafzb59++jTpw9XrlyhadOmtG3blkuXLrFmzRp69OjBjBkzaNasGQAWi4V+/frx559/EhQURLdu3XByciI2Npbt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\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mzzcR_wOafxe"
      },
      "source": [
        "So here we get a clear look that most of the kickstarters fail. As we can see here there are three most common states, Failed, Success, Canceled, which occupy most of the data, so we can concentrate on this three more."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 76
        },
        "id": "QelG1crFabA_",
        "outputId": "6f6dee8a-01b6-473a-d1b0-b3845538bf3b"
      },
      "source": [
        "kick.head(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1000002330</td>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>GBP</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           ID                             name  ... usd_pledged_real usd_goal_real\n",
              "0  1000002330  The Songs of Adelaide & Abullah  ...              0.0       1533.95\n",
              "\n",
              "[1 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R5RNbYoieLmA"
      },
      "source": [
        "**Deleting the ID Column**\n",
        "\n",
        "Here, i left to delete the \"ID\" column, because all of the ID fields are unique, and it will not give us any information about project success."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "395TOE7oeKx9"
      },
      "source": [
        "kick.drop('ID',axis=1, inplace= True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 76
        },
        "id": "ZGG2ATnAfmgM",
        "outputId": "7b6ca92c-79a0-46af-93c0-a9dc9577fba3"
      },
      "source": [
        "kick.head(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>currency</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>GBP</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                              name category  ... usd_pledged_real usd_goal_real\n",
              "0  The Songs of Adelaide & Abullah   Poetry  ...              0.0       1533.95\n",
              "\n",
              "[1 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PzdkpFsogn_z"
      },
      "source": [
        "**Deleting the Currency column**\n",
        "\n",
        "Here, i would also like to drop the \"currency\" column because as we will just use the information that is already converted to USD"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rm1HJP2SgmmD"
      },
      "source": [
        "kick.drop('currency', axis=1, inplace= True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 76
        },
        "id": "IbmCZLmrhKOQ",
        "outputId": "35d18d43-9515-4a23-e6cc-4a570b51ea57"
      },
      "source": [
        "kick.head(1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                              name category  ... usd_pledged_real usd_goal_real\n",
              "0  The Songs of Adelaide & Abullah   Poetry  ...              0.0       1533.95\n",
              "\n",
              "[1 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LzyEsc-bWH0d"
      },
      "source": [
        "**Feature Extraction/Feature Engineering**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CKDaVr_bWaU5"
      },
      "source": [
        "Here, I want to create new columns and variables from our existing data to extract more information from our data.\n",
        "First I will engineer a \"success\" variable from the information that is already in the dataset.\n",
        "Here, I am defining success as the project is raising as much as their goal defined."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0fF4qrS_WZI2"
      },
      "source": [
        "kick['success'] = (kick.usd_pledged_real >= kick.usd_goal_real)*1"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "6ZL1Y1sxi6_A",
        "outputId": "27811c1d-874c-4a2d-bdf7-cf985388f167"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... success\n",
              "0                    The Songs of Adelaide & Abullah  ...       0\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...       0\n",
              "2                                     Where is Hank?  ...       0\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...       0\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...       0\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Eit8mh9Ei9MW",
        "outputId": "843913c7-6d10-4c7d-a296-5a590af77002"
      },
      "source": [
        "kick.success.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    374860.000000\n",
              "mean          0.360887\n",
              "std           0.480258\n",
              "min           0.000000\n",
              "25%           0.000000\n",
              "50%           0.000000\n",
              "75%           1.000000\n",
              "max           1.000000\n",
              "Name: success, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "IQWGWNlEjTF-",
        "outputId": "60ba5c02-1f96-42ef-905e-76c8471451d2"
      },
      "source": [
        "kick[kick.success==1].head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Monarch Espresso Bar</td>\n",
              "      <td>Restaurants</td>\n",
              "      <td>Food</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>2016-02-26</td>\n",
              "      <td>successful</td>\n",
              "      <td>224</td>\n",
              "      <td>US</td>\n",
              "      <td>52375.00</td>\n",
              "      <td>50000.00</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Support Solar Roasted Coffee &amp; Green Energy!  ...</td>\n",
              "      <td>Food</td>\n",
              "      <td>Food</td>\n",
              "      <td>2014-12-21</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>successful</td>\n",
              "      <td>16</td>\n",
              "      <td>US</td>\n",
              "      <td>1205.00</td>\n",
              "      <td>1000.00</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Lisa Lim New CD!</td>\n",
              "      <td>Indie Rock</td>\n",
              "      <td>Music</td>\n",
              "      <td>2013-04-08</td>\n",
              "      <td>2013-03-09</td>\n",
              "      <td>successful</td>\n",
              "      <td>100</td>\n",
              "      <td>US</td>\n",
              "      <td>12700.00</td>\n",
              "      <td>12500.00</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Tombstone: Old West tabletop game and miniatur...</td>\n",
              "      <td>Tabletop Games</td>\n",
              "      <td>Games</td>\n",
              "      <td>2017-05-03</td>\n",
              "      <td>2017-04-05</td>\n",
              "      <td>successful</td>\n",
              "      <td>761</td>\n",
              "      <td>GB</td>\n",
              "      <td>121857.33</td>\n",
              "      <td>6469.73</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Mike Corey's Darkness &amp; Light Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>2012-08-17</td>\n",
              "      <td>2012-08-02</td>\n",
              "      <td>successful</td>\n",
              "      <td>7</td>\n",
              "      <td>US</td>\n",
              "      <td>250.00</td>\n",
              "      <td>250.00</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                 name  ... success\n",
              "5                                Monarch Espresso Bar  ...       1\n",
              "6   Support Solar Roasted Coffee & Green Energy!  ...  ...       1\n",
              "11                                   Lisa Lim New CD!  ...       1\n",
              "14  Tombstone: Old West tabletop game and miniatur...  ...       1\n",
              "18                Mike Corey's Darkness & Light Album  ...       1\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TN6BJgvHyD8J"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GCjc990TyjFr"
      },
      "source": [
        "Now i will generate a new feature which will be \" Duration\" which will give us a detailed information whether the timeline of a project impacts on the success.The dataset contains information about the date and time a project was launched, and what was the last deadline of backers to invest fund. From this it is straightforward to calculate how many hours the fundraising was supposed to last."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p3ETydfIyixD"
      },
      "source": [
        "kick['Duration'] = (kick.deadline - kick.launched).astype('timedelta64[h]')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AFb-UTQR1JFH",
        "outputId": "6d8f487c-60ef-47c9-f5a3-656a6b3aa327"
      },
      "source": [
        "kick.Duration.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    1416.0\n",
              "1    1440.0\n",
              "2    1080.0\n",
              "3     720.0\n",
              "4    1344.0\n",
              "Name: Duration, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "eQ13hYP41PqQ",
        "outputId": "616eaf69-6a5f-4074-ba38-a14bb5573236"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "      <td>1416.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1440.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1080.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1344.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... Duration\n",
              "0                    The Songs of Adelaide & Abullah  ...   1416.0\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...   1440.0\n",
              "2                                     Where is Hank?  ...   1080.0\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...    720.0\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...   1344.0\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "awOiRcYi1eer"
      },
      "source": [
        "Now i will create a new feature \" avg_backers\" whcih will give us idea about contribution of backers per project. This will give us some insights."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ifcm3L8Z1c1v"
      },
      "source": [
        "kick['avg_backers'] = (kick['usd_pledged_real']/(kick['backers']+1))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0dK4jGZP2_xy",
        "outputId": "9515715c-c647-4184-f084-9f02b7e7aea4"
      },
      "source": [
        "kick.avg_backers.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      0.000000\n",
              "1    151.312500\n",
              "2     55.000000\n",
              "3      0.500000\n",
              "4     85.533333\n",
              "Name: avg_backers, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "_UEyJSGA3LWf",
        "outputId": "8c31c97c-acc1-4afb-d20a-77f1fed8f54d"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>category</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Poetry</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "      <td>1416.0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1440.0</td>\n",
              "      <td>151.312500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Narrative Film</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>55.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>Music</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1344.0</td>\n",
              "      <td>85.533333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... avg_backers\n",
              "0                    The Songs of Adelaide & Abullah  ...    0.000000\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...  151.312500\n",
              "2                                     Where is Hank?  ...   55.000000\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...    0.500000\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...   85.533333\n",
              "\n",
              "[5 rows x 13 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xlaevi0S3Z2D"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "76nTE91v4ugp"
      },
      "source": [
        "**One Hot Encoding**\n",
        "\n",
        "I want to one hot encode the categorical variables: main_category and country.\n",
        "\n",
        "Because this features are important but they are in variable or in labeled format which is not good to feed for a machine learning algorithms, so we will apply one hot encoding on this features.\n",
        "\n",
        "**Why one hot encoding to do?**\n",
        "\n",
        "That categorical data is defined as variables with a finite set of label values.\n",
        "That most machine learning algorithms require numerical input and output variables.\n",
        "That an integer and one hot encoding is used to convert categorical data to integer data.\n",
        "\n",
        "**What will one hot encoding do?**\n",
        "\n",
        "Each state in each feature will be represented as a binary state.\n",
        "\n",
        "This will make it easier for any models we deal by quantifying non-numerical values.\n",
        "\n",
        "For Example:- If a project originated in the U.S. that will be denoted as a value of 1 in the dataset, and all other countries will have a value of 0 for that project."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZEFEYRZS9weQ"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jDOMLBBL9xpl"
      },
      "source": [
        "**Droping the Category Feature**\n",
        "\n",
        "First i will drop the \"category\" column because if we try one hot encoding on the category \" column \" then the dimensionality of our data would be very high."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "25tvdvut9vA-"
      },
      "source": [
        "kick.drop('category', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "iTbmeXjh-pV3",
        "outputId": "b468f71f-161a-4281-f0f5-ad7f52febc1d"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "      <td>1416.0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1440.0</td>\n",
              "      <td>151.312500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>55.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1344.0</td>\n",
              "      <td>85.533333</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... avg_backers\n",
              "0                    The Songs of Adelaide & Abullah  ...    0.000000\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...  151.312500\n",
              "2                                     Where is Hank?  ...   55.000000\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...    0.500000\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...   85.533333\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "elsS3yb4BPVr"
      },
      "source": [
        "kick_encoded = pd.get_dummies(kick.drop(labels=['name', 'launched', 'deadline', 'state', 'usd_pledged_real', 'usd_goal_real','backers','Duration','avg_backers','success'], axis=1), \n",
        "                            columns=['main_category', 'country'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 227
        },
        "id": "KG46eR9TNhL0",
        "outputId": "aecc0283-6720-4bee-8f47-5617613b3eff"
      },
      "source": [
        "kick_encoded.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   main_category_Art  main_category_Comics  ...  country_SG  country_US\n",
              "0                  0                     0  ...           0           0\n",
              "1                  0                     0  ...           0           1\n",
              "2                  0                     0  ...           0           1\n",
              "3                  0                     0  ...           0           1\n",
              "4                  0                     0  ...           0           1\n",
              "\n",
              "[5 rows x 37 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZluOMPIMNk9o"
      },
      "source": [
        "kick = kick.join(kick_encoded)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 438
        },
        "id": "0YIHx8iqSuIt",
        "outputId": "4a72135a-60e9-40f0-ae76-26c16a689b0d"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>main_category</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>country</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>Publishing</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>GB</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "      <td>1416.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>US</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1440.0</td>\n",
              "      <td>151.312500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>US</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>Music</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>US</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>Film &amp; Video</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>US</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1344.0</td>\n",
              "      <td>85.533333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... country_US\n",
              "0                    The Songs of Adelaide & Abullah  ...          0\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...          1\n",
              "2                                     Where is Hank?  ...          1\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...          1\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...          1\n",
              "\n",
              "[5 rows x 49 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2a1t5HGQWoLp"
      },
      "source": [
        "kick.drop('main_category', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tH56osKzXugI"
      },
      "source": [
        "kick.drop('country', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 438
        },
        "id": "3kVA6FUtX22M",
        "outputId": "5e2afbff-8fcf-449e-e482-9fdd9ae66671"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "      <td>1416.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1440.0</td>\n",
              "      <td>151.312500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1344.0</td>\n",
              "      <td>85.533333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... country_US\n",
              "0                    The Songs of Adelaide & Abullah  ...          0\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...          1\n",
              "2                                     Where is Hank?  ...          1\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...          1\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...          1\n",
              "\n",
              "[5 rows x 47 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QXSY4vdoX40d"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yo5_dV2HxX6K"
      },
      "source": [
        "Now i have to deal with \"name\" feature or columns first we will check if it has realation with the success.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iy1xr1mgxlJJ",
        "outputId": "309d7950-e748-4df5-c05d-aaba646c9fa8"
      },
      "source": [
        "kick.name.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count                       374860\n",
              "unique                      372068\n",
              "top       New EP/Music Development\n",
              "freq                            13\n",
              "Name: name, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "IWN8mbVpyAQ-",
        "outputId": "a62240a9-601b-4574-9f0e-660c656d4c44"
      },
      "source": [
        "kick[kick.success == 1].head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Monarch Espresso Bar</td>\n",
              "      <td>2016-04-01</td>\n",
              "      <td>2016-02-26</td>\n",
              "      <td>successful</td>\n",
              "      <td>224</td>\n",
              "      <td>52375.00</td>\n",
              "      <td>50000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>840.0</td>\n",
              "      <td>232.777778</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Support Solar Roasted Coffee &amp; Green Energy!  ...</td>\n",
              "      <td>2014-12-21</td>\n",
              "      <td>2014-12-01</td>\n",
              "      <td>successful</td>\n",
              "      <td>16</td>\n",
              "      <td>1205.00</td>\n",
              "      <td>1000.00</td>\n",
              "      <td>1</td>\n",
              "      <td>480.0</td>\n",
              "      <td>70.882353</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Lisa Lim New CD!</td>\n",
              "      <td>2013-04-08</td>\n",
              "      <td>2013-03-09</td>\n",
              "      <td>successful</td>\n",
              "      <td>100</td>\n",
              "      <td>12700.00</td>\n",
              "      <td>12500.00</td>\n",
              "      <td>1</td>\n",
              "      <td>720.0</td>\n",
              "      <td>125.742574</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Tombstone: Old West tabletop game and miniatur...</td>\n",
              "      <td>2017-05-03</td>\n",
              "      <td>2017-04-05</td>\n",
              "      <td>successful</td>\n",
              "      <td>761</td>\n",
              "      <td>121857.33</td>\n",
              "      <td>6469.73</td>\n",
              "      <td>1</td>\n",
              "      <td>672.0</td>\n",
              "      <td>159.917756</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Mike Corey's Darkness &amp; Light Album</td>\n",
              "      <td>2012-08-17</td>\n",
              "      <td>2012-08-02</td>\n",
              "      <td>successful</td>\n",
              "      <td>7</td>\n",
              "      <td>250.00</td>\n",
              "      <td>250.00</td>\n",
              "      <td>1</td>\n",
              "      <td>360.0</td>\n",
              "      <td>31.250000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                 name  ... country_US\n",
              "5                                Monarch Espresso Bar  ...          1\n",
              "6   Support Solar Roasted Coffee & Green Energy!  ...  ...          1\n",
              "11                                   Lisa Lim New CD!  ...          1\n",
              "14  Tombstone: Old West tabletop game and miniatur...  ...          0\n",
              "18                Mike Corey's Darkness & Light Album  ...          1\n",
              "\n",
              "[5 rows x 47 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "N6tlgaC6yZxD",
        "outputId": "77af952b-b36f-4e90-c96f-72f0ab1c761a"
      },
      "source": [
        "kick[kick.success == 1].name.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5                                  Monarch Espresso Bar\n",
              "6     Support Solar Roasted Coffee & Green Energy!  ...\n",
              "11                                     Lisa Lim New CD!\n",
              "14    Tombstone: Old West tabletop game and miniatur...\n",
              "18                  Mike Corey's Darkness & Light Album\n",
              "Name: name, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V9b09FdVymuL",
        "outputId": "bb741f56-1ba2-4a42-b1d5-e76bc51e4808"
      },
      "source": [
        "kick[kick.success == 0].name.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0                      The Songs of Adelaide & Abullah\n",
              "1        Greeting From Earth: ZGAC Arts Capsule For ET\n",
              "2                                       Where is Hank?\n",
              "3    ToshiCapital Rekordz Needs Help to Complete Album\n",
              "4    Community Film Project: The Art of Neighborhoo...\n",
              "Name: name, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_X5Z2HFByw-K"
      },
      "source": [
        "kick['name_len'] = kick['name'].str.len()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 438
        },
        "id": "gwB8gzSNzUnC",
        "outputId": "d05005da-3659-46cc-f5e4-83fbe51e3fc6"
      },
      "source": [
        "kick.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "      <th>name_len</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
              "      <td>2015-10-09</td>\n",
              "      <td>2015-08-11</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1533.95</td>\n",
              "      <td>0</td>\n",
              "      <td>1416.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
              "      <td>2017-11-01</td>\n",
              "      <td>2017-09-02</td>\n",
              "      <td>failed</td>\n",
              "      <td>15</td>\n",
              "      <td>2421.0</td>\n",
              "      <td>30000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1440.0</td>\n",
              "      <td>151.312500</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Where is Hank?</td>\n",
              "      <td>2013-02-26</td>\n",
              "      <td>2013-01-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>3</td>\n",
              "      <td>220.0</td>\n",
              "      <td>45000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1080.0</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
              "      <td>2012-04-16</td>\n",
              "      <td>2012-03-17</td>\n",
              "      <td>failed</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5000.00</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
              "      <td>2015-08-29</td>\n",
              "      <td>2015-07-04</td>\n",
              "      <td>canceled</td>\n",
              "      <td>14</td>\n",
              "      <td>1283.0</td>\n",
              "      <td>19500.00</td>\n",
              "      <td>0</td>\n",
              "      <td>1344.0</td>\n",
              "      <td>85.533333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>58</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                name  ... name_len\n",
              "0                    The Songs of Adelaide & Abullah  ...       31\n",
              "1      Greeting From Earth: ZGAC Arts Capsule For ET  ...       45\n",
              "2                                     Where is Hank?  ...       14\n",
              "3  ToshiCapital Rekordz Needs Help to Complete Album  ...       49\n",
              "4  Community Film Project: The Art of Neighborhoo...  ...       58\n",
              "\n",
              "[5 rows x 48 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U-XTCUdmzWlK",
        "outputId": "00e20618-5631-47b4-ebee-ee854d4d7469"
      },
      "source": [
        "kick[kick.success == 0].name_len.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    31\n",
              "1    45\n",
              "2    14\n",
              "3    49\n",
              "4    58\n",
              "Name: name_len, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aA_6U_N125NE",
        "outputId": "191be5e5-0a13-4602-8cbf-827d7c3c2e06"
      },
      "source": [
        "kick[kick.success ==1].name_len.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5     20\n",
              "6     60\n",
              "11    16\n",
              "14    57\n",
              "18    35\n",
              "Name: name_len, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xZPP1CSJ3Bh4",
        "outputId": "799626fa-d0c1-4052-a1fe-fbfb05a51291"
      },
      "source": [
        "kick[kick.success == 1].name_len.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    135282.000000\n",
              "mean         36.302420\n",
              "std          15.620289\n",
              "min           1.000000\n",
              "25%          24.000000\n",
              "50%          36.000000\n",
              "75%          50.000000\n",
              "max          85.000000\n",
              "Name: name_len, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NS4ORTs8AolM"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fYSdmbMabrN3"
      },
      "source": [
        "**Removal of others states except \"failed\" and successful\".** \n",
        "\n",
        "\" State \" feature is a categorical variable ivided into the levels successful, failed, live, cancelled, undefined and suspended.\n",
        "\n",
        "For clarity we will just look whether a project was successful or failed (hence, we will remove all projects that are not classified as one of the two)."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LmDiTGelc8XI",
        "outputId": "21b8d874-dee0-48a0-db29-6200303800b4"
      },
      "source": [
        "kick.state.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      failed\n",
              "1      failed\n",
              "2      failed\n",
              "3      failed\n",
              "4    canceled\n",
              "Name: state, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M_-zjnSubr0k"
      },
      "source": [
        "kick = kick.loc[kick['state'].isin(['successful', 'failed'])]"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RRAilfkTdPr9",
        "outputId": "0b9058b9-5919-4d74-b8b1-5cb27ba3fa28"
      },
      "source": [
        "kick.state.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        failed\n",
              "1        failed\n",
              "2        failed\n",
              "3        failed\n",
              "5    successful\n",
              "Name: state, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WkwVsTGdCduz"
      },
      "source": [
        "We will create a scatter plot to check the relatonship between the \"usd_pledged_real\" and \"name_len\" whether this both have a connection with success or not."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 396
        },
        "id": "-A5rdupEFYwn",
        "outputId": "c5dc048f-0576-4130-95ea-e7927788cdd3"
      },
      "source": [
        "colors= ('darkgreen','darkred')\n",
        "ax = sns.scatterplot(kick.usd_pledged_real, kick.name_len, hue=kick.state, palette=colors)\n",
        "\n",
        "ax.set(xlabel='Amount pledged in millions',ylabel='Character length of project name', title='The Importance of Name' )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Character length of project name'),\n",
              " Text(0.5, 0, 'Amount pledged in millions'),\n",
              " Text(0.5, 1.0, 'The Importance of Name')]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 82
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_hTZovxer39q"
      },
      "source": [
        "If a project’s name is exceeding 60 characters, the pledged amount is distributed around 0 and (more or less) all projects seem to fail. Let us have a look at the goal of these projects compared to the projects <60."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2CmKhF5tw4yG",
        "outputId": "a67bff44-77c1-4ed5-e4aa-80b28b013a7b"
      },
      "source": [
        "# creating variable for namelength more than or equals to 60 characters\n",
        "kick_name_len_60up = kick.loc[kick.name_len >= 60,['state', 'usd_goal_real']]\n",
        "# creating variable for namelength less than 60 characters\n",
        "kick_name_len_60down = kick.loc[kick.name_len < 60,[ 'state', 'usd_goal_real']]\n",
        "\n",
        "print(kick_name_len_60up['usd_goal_real'].median() > kick_name_len_60down['usd_goal_real'].median())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "True\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HpkDmoF4zq_n"
      },
      "source": [
        "So here we found out that median is higher for the >=60 group regarding their goal( Boolean returns \"True\").\n",
        "\n",
        "Hence, we cannot conclude that projects with a name length of ≥60 simply have lower goal values. On the contrary, they actually have higher goals compared to the projects that have names that are <60 characters (on average).\n",
        "\n",
        "So, as per my assumption the \"success\" of the projects also depends on the name_length that, long names have the tendency to sound unprofessional, not on a proven point but by looking at the graph.\n",
        "Hence, they get less Pledged and fails."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HQ3U9mwvUTtP",
        "outputId": "22259106-d6e2-499b-b1d6-01fc60188f60"
      },
      "source": [
        "kick_new = kick[(kick['state']==\"failed\") & (kick['name_len'] > 60)]\n",
        "print(kick_new.describe())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "          backers  usd_pledged_real  ...  country_US    name_len\n",
            "count  943.000000        943.000000  ...       943.0  943.000000\n",
            "mean     9.399788        639.328929  ...         1.0   74.538706\n",
            "std     15.775639       1361.820939  ...         0.0    7.800208\n",
            "min      0.000000          0.000000  ...         1.0   61.000000\n",
            "25%      1.000000         20.000000  ...         1.0   68.000000\n",
            "50%      4.000000        176.000000  ...         1.0   75.000000\n",
            "75%     11.000000        612.500000  ...         1.0   82.000000\n",
            "max    164.000000      13348.000000  ...         1.0   85.000000\n",
            "\n",
            "[8 rows x 44 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "id": "hH1opUfhUzPv",
        "outputId": "e2fe2ca5-21e1-493b-b5c6-76484bc55606"
      },
      "source": [
        "kick_new.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>deadline</th>\n",
              "      <th>launched</th>\n",
              "      <th>state</th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "      <th>name_len</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>Brandi Emma promotes her new, 5-song EP becaus...</td>\n",
              "      <td>2010-07-12</td>\n",
              "      <td>2010-06-12</td>\n",
              "      <td>failed</td>\n",
              "      <td>44</td>\n",
              "      <td>4006.0</td>\n",
              "      <td>10000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>89.022222</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>188</th>\n",
              "      <td>Raise funds for the new JonathanGluck and the ...</td>\n",
              "      <td>2010-09-19</td>\n",
              "      <td>2010-07-30</td>\n",
              "      <td>failed</td>\n",
              "      <td>2</td>\n",
              "      <td>30.0</td>\n",
              "      <td>4000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1224.0</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>357</th>\n",
              "      <td>Circa Vitae requests crowd fundage to record o...</td>\n",
              "      <td>2009-11-01</td>\n",
              "      <td>2009-08-06</td>\n",
              "      <td>failed</td>\n",
              "      <td>4</td>\n",
              "      <td>80.0</td>\n",
              "      <td>2000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2088.0</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>633</th>\n",
              "      <td>Legendary Steamboat Springs Band records an al...</td>\n",
              "      <td>2010-08-01</td>\n",
              "      <td>2010-07-14</td>\n",
              "      <td>failed</td>\n",
              "      <td>14</td>\n",
              "      <td>1310.0</td>\n",
              "      <td>5500.0</td>\n",
              "      <td>0</td>\n",
              "      <td>432.0</td>\n",
              "      <td>87.333333</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1048</th>\n",
              "      <td>Please Donate Money For My First Music Video S...</td>\n",
              "      <td>2010-09-17</td>\n",
              "      <td>2010-08-18</td>\n",
              "      <td>failed</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5000.0</td>\n",
              "      <td>0</td>\n",
              "      <td>720.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>66</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                                   name  ... name_len\n",
              "132   Brandi Emma promotes her new, 5-song EP becaus...  ...       80\n",
              "188   Raise funds for the new JonathanGluck and the ...  ...       65\n",
              "357   Circa Vitae requests crowd fundage to record o...  ...       81\n",
              "633   Legendary Steamboat Springs Band records an al...  ...       67\n",
              "1048  Please Donate Money For My First Music Video S...  ...       66\n",
              "\n",
              "[5 rows x 48 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "id": "ZPReb-u1VCwv",
        "outputId": "e1bce6bd-42cf-42d6-f089-2c296b58ffe4"
      },
      "source": [
        "kick_new.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "      <th>name_len</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.000000</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.0</td>\n",
              "      <td>943.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>9.399788</td>\n",
              "      <td>639.328929</td>\n",
              "      <td>8310.415366</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1237.539767</td>\n",
              "      <td>41.987256</td>\n",
              "      <td>0.078473</td>\n",
              "      <td>0.022269</td>\n",
              "      <td>0.005302</td>\n",
              "      <td>0.012725</td>\n",
              "      <td>0.016967</td>\n",
              "      <td>0.028632</td>\n",
              "      <td>0.304348</td>\n",
              "      <td>0.027572</td>\n",
              "      <td>0.031813</td>\n",
              "      <td>0.025451</td>\n",
              "      <td>0.231177</td>\n",
              "      <td>0.031813</td>\n",
              "      <td>0.102863</td>\n",
              "      <td>0.023330</td>\n",
              "      <td>0.057264</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>74.538706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>15.775639</td>\n",
              "      <td>1361.820939</td>\n",
              "      <td>15552.773722</td>\n",
              "      <td>0.0</td>\n",
              "      <td>537.429334</td>\n",
              "      <td>69.623402</td>\n",
              "      <td>0.269057</td>\n",
              "      <td>0.147637</td>\n",
              "      <td>0.072662</td>\n",
              "      <td>0.112146</td>\n",
              "      <td>0.129217</td>\n",
              "      <td>0.166858</td>\n",
              "      <td>0.460375</td>\n",
              "      <td>0.163829</td>\n",
              "      <td>0.175596</td>\n",
              "      <td>0.157573</td>\n",
              "      <td>0.421809</td>\n",
              "      <td>0.175596</td>\n",
              "      <td>0.303941</td>\n",
              "      <td>0.151029</td>\n",
              "      <td>0.232470</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.800208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>100.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>72.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>61.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>2200.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>768.000000</td>\n",
              "      <td>7.625000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>68.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.000000</td>\n",
              "      <td>176.000000</td>\n",
              "      <td>5000.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1104.000000</td>\n",
              "      <td>28.888889</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>75.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>11.000000</td>\n",
              "      <td>612.500000</td>\n",
              "      <td>10000.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1572.000000</td>\n",
              "      <td>50.002500</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>82.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>164.000000</td>\n",
              "      <td>13348.000000</td>\n",
              "      <td>325000.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2160.000000</td>\n",
              "      <td>1206.666667</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>85.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          backers  usd_pledged_real  ...  country_US    name_len\n",
              "count  943.000000        943.000000  ...       943.0  943.000000\n",
              "mean     9.399788        639.328929  ...         1.0   74.538706\n",
              "std     15.775639       1361.820939  ...         0.0    7.800208\n",
              "min      0.000000          0.000000  ...         1.0   61.000000\n",
              "25%      1.000000         20.000000  ...         1.0   68.000000\n",
              "50%      4.000000        176.000000  ...         1.0   75.000000\n",
              "75%     11.000000        612.500000  ...         1.0   82.000000\n",
              "max    164.000000      13348.000000  ...         1.0   85.000000\n",
              "\n",
              "[8 rows x 44 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "id": "XTBP9PTlzjMM",
        "outputId": "45821935-245e-40e2-9b63-a1b61fd01c23"
      },
      "source": [
        "kick.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "      <th>name_len</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>331462.000000</td>\n",
              "      <td>3.314620e+05</td>\n",
              "      <td>3.314620e+05</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>116.456315</td>\n",
              "      <td>9.939989e+03</td>\n",
              "      <td>4.152286e+04</td>\n",
              "      <td>0.403823</td>\n",
              "      <td>814.941852</td>\n",
              "      <td>60.372112</td>\n",
              "      <td>0.077354</td>\n",
              "      <td>0.029801</td>\n",
              "      <td>0.023586</td>\n",
              "      <td>0.010780</td>\n",
              "      <td>0.076519</td>\n",
              "      <td>0.059657</td>\n",
              "      <td>0.170466</td>\n",
              "      <td>0.066536</td>\n",
              "      <td>0.086043</td>\n",
              "      <td>0.012514</td>\n",
              "      <td>0.138179</td>\n",
              "      <td>0.029231</td>\n",
              "      <td>0.106839</td>\n",
              "      <td>0.081596</td>\n",
              "      <td>0.030899</td>\n",
              "      <td>0.001463</td>\n",
              "      <td>0.019960</td>\n",
              "      <td>0.001578</td>\n",
              "      <td>0.037320</td>\n",
              "      <td>0.001967</td>\n",
              "      <td>0.010366</td>\n",
              "      <td>0.002794</td>\n",
              "      <td>0.005651</td>\n",
              "      <td>0.007603</td>\n",
              "      <td>0.088858</td>\n",
              "      <td>0.001439</td>\n",
              "      <td>0.002061</td>\n",
              "      <td>0.007147</td>\n",
              "      <td>0.000069</td>\n",
              "      <td>0.000172</td>\n",
              "      <td>0.004257</td>\n",
              "      <td>0.007274</td>\n",
              "      <td>0.001756</td>\n",
              "      <td>0.003844</td>\n",
              "      <td>0.004553</td>\n",
              "      <td>0.001370</td>\n",
              "      <td>0.788501</td>\n",
              "      <td>34.220840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>965.732911</td>\n",
              "      <td>9.664561e+04</td>\n",
              "      <td>1.109279e+06</td>\n",
              "      <td>0.490664</td>\n",
              "      <td>305.137602</td>\n",
              "      <td>107.545885</td>\n",
              "      <td>0.267153</td>\n",
              "      <td>0.170039</td>\n",
              "      <td>0.151757</td>\n",
              "      <td>0.103263</td>\n",
              "      <td>0.265826</td>\n",
              "      <td>0.236850</td>\n",
              "      <td>0.376042</td>\n",
              "      <td>0.249216</td>\n",
              "      <td>0.280428</td>\n",
              "      <td>0.111165</td>\n",
              "      <td>0.345088</td>\n",
              "      <td>0.168454</td>\n",
              "      <td>0.308909</td>\n",
              "      <td>0.273749</td>\n",
              "      <td>0.173046</td>\n",
              "      <td>0.038224</td>\n",
              "      <td>0.139863</td>\n",
              "      <td>0.039691</td>\n",
              "      <td>0.189544</td>\n",
              "      <td>0.044308</td>\n",
              "      <td>0.101286</td>\n",
              "      <td>0.052782</td>\n",
              "      <td>0.074959</td>\n",
              "      <td>0.086861</td>\n",
              "      <td>0.284539</td>\n",
              "      <td>0.037908</td>\n",
              "      <td>0.045347</td>\n",
              "      <td>0.084238</td>\n",
              "      <td>0.008330</td>\n",
              "      <td>0.013112</td>\n",
              "      <td>0.065106</td>\n",
              "      <td>0.084976</td>\n",
              "      <td>0.041866</td>\n",
              "      <td>0.061877</td>\n",
              "      <td>0.067319</td>\n",
              "      <td>0.036984</td>\n",
              "      <td>0.408372</td>\n",
              "      <td>15.961965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e-02</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>5.000000e+01</td>\n",
              "      <td>2.000000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>720.000000</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>21.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>15.000000</td>\n",
              "      <td>7.875000e+02</td>\n",
              "      <td>5.000000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>720.000000</td>\n",
              "      <td>38.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>33.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>63.000000</td>\n",
              "      <td>4.609000e+03</td>\n",
              "      <td>1.500000e+04</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>864.000000</td>\n",
              "      <td>72.666667</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>48.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>219382.000000</td>\n",
              "      <td>2.033899e+07</td>\n",
              "      <td>1.663614e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2208.000000</td>\n",
              "      <td>6100.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>85.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             backers  usd_pledged_real  ...     country_US       name_len\n",
              "count  331462.000000      3.314620e+05  ...  331462.000000  331462.000000\n",
              "mean      116.456315      9.939989e+03  ...       0.788501      34.220840\n",
              "std       965.732911      9.664561e+04  ...       0.408372      15.961965\n",
              "min         0.000000      0.000000e+00  ...       0.000000       1.000000\n",
              "25%         2.000000      5.000000e+01  ...       1.000000      21.000000\n",
              "50%        15.000000      7.875000e+02  ...       1.000000      33.000000\n",
              "75%        63.000000      4.609000e+03  ...       1.000000      48.000000\n",
              "max    219382.000000      2.033899e+07  ...       1.000000      85.000000\n",
              "\n",
              "[8 rows x 44 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v3oBcF5ikoe6",
        "outputId": "7574f444-654c-4527-9688-4d3dada063b5"
      },
      "source": [
        "kick[kick.success == 1].name_len.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    133852.000000\n",
              "mean         36.243343\n",
              "std          15.620528\n",
              "min           1.000000\n",
              "25%          23.000000\n",
              "50%          36.000000\n",
              "75%          50.000000\n",
              "max          85.000000\n",
              "Name: name_len, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eeYxXdnjoVE4",
        "outputId": "572e5eef-cf34-4501-81b8-9dd681c51a3e"
      },
      "source": [
        "kick[kick.success == 0].name_len.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    197610.000000\n",
              "mean         32.850888\n",
              "std          16.045007\n",
              "min           1.000000\n",
              "25%          19.000000\n",
              "50%          31.000000\n",
              "75%          47.000000\n",
              "max          85.000000\n",
              "Name: name_len, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "id": "JDEKXSwqTjIU",
        "outputId": "543a6113-8d07-46aa-adba-05ce354994d2"
      },
      "source": [
        "kick.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "      <th>name_len</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>331462.000000</td>\n",
              "      <td>3.314620e+05</td>\n",
              "      <td>3.314620e+05</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>116.456315</td>\n",
              "      <td>9.939989e+03</td>\n",
              "      <td>4.152286e+04</td>\n",
              "      <td>0.403823</td>\n",
              "      <td>814.941852</td>\n",
              "      <td>60.372112</td>\n",
              "      <td>0.077354</td>\n",
              "      <td>0.029801</td>\n",
              "      <td>0.023586</td>\n",
              "      <td>0.010780</td>\n",
              "      <td>0.076519</td>\n",
              "      <td>0.059657</td>\n",
              "      <td>0.170466</td>\n",
              "      <td>0.066536</td>\n",
              "      <td>0.086043</td>\n",
              "      <td>0.012514</td>\n",
              "      <td>0.138179</td>\n",
              "      <td>0.029231</td>\n",
              "      <td>0.106839</td>\n",
              "      <td>0.081596</td>\n",
              "      <td>0.030899</td>\n",
              "      <td>0.001463</td>\n",
              "      <td>0.019960</td>\n",
              "      <td>0.001578</td>\n",
              "      <td>0.037320</td>\n",
              "      <td>0.001967</td>\n",
              "      <td>0.010366</td>\n",
              "      <td>0.002794</td>\n",
              "      <td>0.005651</td>\n",
              "      <td>0.007603</td>\n",
              "      <td>0.088858</td>\n",
              "      <td>0.001439</td>\n",
              "      <td>0.002061</td>\n",
              "      <td>0.007147</td>\n",
              "      <td>0.000069</td>\n",
              "      <td>0.000172</td>\n",
              "      <td>0.004257</td>\n",
              "      <td>0.007274</td>\n",
              "      <td>0.001756</td>\n",
              "      <td>0.003844</td>\n",
              "      <td>0.004553</td>\n",
              "      <td>0.001370</td>\n",
              "      <td>0.788501</td>\n",
              "      <td>34.220840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>965.732911</td>\n",
              "      <td>9.664561e+04</td>\n",
              "      <td>1.109279e+06</td>\n",
              "      <td>0.490664</td>\n",
              "      <td>305.137602</td>\n",
              "      <td>107.545885</td>\n",
              "      <td>0.267153</td>\n",
              "      <td>0.170039</td>\n",
              "      <td>0.151757</td>\n",
              "      <td>0.103263</td>\n",
              "      <td>0.265826</td>\n",
              "      <td>0.236850</td>\n",
              "      <td>0.376042</td>\n",
              "      <td>0.249216</td>\n",
              "      <td>0.280428</td>\n",
              "      <td>0.111165</td>\n",
              "      <td>0.345088</td>\n",
              "      <td>0.168454</td>\n",
              "      <td>0.308909</td>\n",
              "      <td>0.273749</td>\n",
              "      <td>0.173046</td>\n",
              "      <td>0.038224</td>\n",
              "      <td>0.139863</td>\n",
              "      <td>0.039691</td>\n",
              "      <td>0.189544</td>\n",
              "      <td>0.044308</td>\n",
              "      <td>0.101286</td>\n",
              "      <td>0.052782</td>\n",
              "      <td>0.074959</td>\n",
              "      <td>0.086861</td>\n",
              "      <td>0.284539</td>\n",
              "      <td>0.037908</td>\n",
              "      <td>0.045347</td>\n",
              "      <td>0.084238</td>\n",
              "      <td>0.008330</td>\n",
              "      <td>0.013112</td>\n",
              "      <td>0.065106</td>\n",
              "      <td>0.084976</td>\n",
              "      <td>0.041866</td>\n",
              "      <td>0.061877</td>\n",
              "      <td>0.067319</td>\n",
              "      <td>0.036984</td>\n",
              "      <td>0.408372</td>\n",
              "      <td>15.961965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e-02</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>5.000000e+01</td>\n",
              "      <td>2.000000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>720.000000</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>21.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>15.000000</td>\n",
              "      <td>7.875000e+02</td>\n",
              "      <td>5.000000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>720.000000</td>\n",
              "      <td>38.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>33.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>63.000000</td>\n",
              "      <td>4.609000e+03</td>\n",
              "      <td>1.500000e+04</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>864.000000</td>\n",
              "      <td>72.666667</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>48.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>219382.000000</td>\n",
              "      <td>2.033899e+07</td>\n",
              "      <td>1.663614e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2208.000000</td>\n",
              "      <td>6100.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>85.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             backers  usd_pledged_real  ...     country_US       name_len\n",
              "count  331462.000000      3.314620e+05  ...  331462.000000  331462.000000\n",
              "mean      116.456315      9.939989e+03  ...       0.788501      34.220840\n",
              "std       965.732911      9.664561e+04  ...       0.408372      15.961965\n",
              "min         0.000000      0.000000e+00  ...       0.000000       1.000000\n",
              "25%         2.000000      5.000000e+01  ...       1.000000      21.000000\n",
              "50%        15.000000      7.875000e+02  ...       1.000000      33.000000\n",
              "75%        63.000000      4.609000e+03  ...       1.000000      48.000000\n",
              "max    219382.000000      2.033899e+07  ...       1.000000      85.000000\n",
              "\n",
              "[8 rows x 44 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5xKuCb7ojXnI",
        "outputId": "436456ef-4ab9-4103-baf1-c3f7a137ef64"
      },
      "source": [
        "kick.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(331462, 48)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YTjpTXKSjhxp",
        "outputId": "480f30f8-2eaa-45b5-a4a8-485bdcc8a2d8"
      },
      "source": [
        "kick[kick.success==1].Duration.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    133852.000000\n",
              "mean        771.768580\n",
              "std         282.547497\n",
              "min          24.000000\n",
              "25%         720.000000\n",
              "50%         720.000000\n",
              "75%         816.000000\n",
              "max        2208.000000\n",
              "Name: Duration, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wUQVlSuYkQgW",
        "outputId": "b0eb5fbc-251d-426c-ae60-3240938d8b80"
      },
      "source": [
        "kick[kick.success==0].Duration.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    197610.000000\n",
              "mean        844.185456\n",
              "std         316.202675\n",
              "min          24.000000\n",
              "25%         720.000000\n",
              "50%         720.000000\n",
              "75%         960.000000\n",
              "max        2208.000000\n",
              "Name: Duration, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0lj07h-Xvg1i",
        "outputId": "92e38379-de11-4a2c-eeab-0473f25fba8f"
      },
      "source": [
        "kick[kick.success==1].usd_goal_real.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    1.338520e+05\n",
              "mean     9.535691e+03\n",
              "std      2.796698e+04\n",
              "min      1.000000e-02\n",
              "25%      1.300000e+03\n",
              "50%      3.840095e+03\n",
              "75%      1.000000e+04\n",
              "max      2.015609e+06\n",
              "Name: usd_goal_real, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r-2BPKoEwJ5j"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yOh41_aHv82O",
        "outputId": "b8d9f4b9-aaa9-4e74-f9d4-18787beec505"
      },
      "source": [
        "kick[kick.success==0].usd_goal_real.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    1.976100e+05\n",
              "mean     6.318950e+04\n",
              "std      1.436069e+06\n",
              "min      1.500000e-01\n",
              "25%      2.500000e+03\n",
              "50%      7.500000e+03\n",
              "75%      2.000000e+04\n",
              "max      1.663614e+08\n",
              "Name: usd_goal_real, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "id": "DCgKiWuPu8QR",
        "outputId": "e6491e6d-ee56-4526-89c1-4a0d6738eb1d"
      },
      "source": [
        "kick.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>backers</th>\n",
              "      <th>usd_pledged_real</th>\n",
              "      <th>usd_goal_real</th>\n",
              "      <th>success</th>\n",
              "      <th>Duration</th>\n",
              "      <th>avg_backers</th>\n",
              "      <th>main_category_Art</th>\n",
              "      <th>main_category_Comics</th>\n",
              "      <th>main_category_Crafts</th>\n",
              "      <th>main_category_Dance</th>\n",
              "      <th>main_category_Design</th>\n",
              "      <th>main_category_Fashion</th>\n",
              "      <th>main_category_Film &amp; Video</th>\n",
              "      <th>main_category_Food</th>\n",
              "      <th>main_category_Games</th>\n",
              "      <th>main_category_Journalism</th>\n",
              "      <th>main_category_Music</th>\n",
              "      <th>main_category_Photography</th>\n",
              "      <th>main_category_Publishing</th>\n",
              "      <th>main_category_Technology</th>\n",
              "      <th>main_category_Theater</th>\n",
              "      <th>country_AT</th>\n",
              "      <th>country_AU</th>\n",
              "      <th>country_BE</th>\n",
              "      <th>country_CA</th>\n",
              "      <th>country_CH</th>\n",
              "      <th>country_DE</th>\n",
              "      <th>country_DK</th>\n",
              "      <th>country_ES</th>\n",
              "      <th>country_FR</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_HK</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_JP</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_MX</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_SE</th>\n",
              "      <th>country_SG</th>\n",
              "      <th>country_US</th>\n",
              "      <th>name_len</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>331462.000000</td>\n",
              "      <td>3.314620e+05</td>\n",
              "      <td>3.314620e+05</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "      <td>331462.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>116.456315</td>\n",
              "      <td>9.939989e+03</td>\n",
              "      <td>4.152286e+04</td>\n",
              "      <td>0.403823</td>\n",
              "      <td>814.941852</td>\n",
              "      <td>60.372112</td>\n",
              "      <td>0.077354</td>\n",
              "      <td>0.029801</td>\n",
              "      <td>0.023586</td>\n",
              "      <td>0.010780</td>\n",
              "      <td>0.076519</td>\n",
              "      <td>0.059657</td>\n",
              "      <td>0.170466</td>\n",
              "      <td>0.066536</td>\n",
              "      <td>0.086043</td>\n",
              "      <td>0.012514</td>\n",
              "      <td>0.138179</td>\n",
              "      <td>0.029231</td>\n",
              "      <td>0.106839</td>\n",
              "      <td>0.081596</td>\n",
              "      <td>0.030899</td>\n",
              "      <td>0.001463</td>\n",
              "      <td>0.019960</td>\n",
              "      <td>0.001578</td>\n",
              "      <td>0.037320</td>\n",
              "      <td>0.001967</td>\n",
              "      <td>0.010366</td>\n",
              "      <td>0.002794</td>\n",
              "      <td>0.005651</td>\n",
              "      <td>0.007603</td>\n",
              "      <td>0.088858</td>\n",
              "      <td>0.001439</td>\n",
              "      <td>0.002061</td>\n",
              "      <td>0.007147</td>\n",
              "      <td>0.000069</td>\n",
              "      <td>0.000172</td>\n",
              "      <td>0.004257</td>\n",
              "      <td>0.007274</td>\n",
              "      <td>0.001756</td>\n",
              "      <td>0.003844</td>\n",
              "      <td>0.004553</td>\n",
              "      <td>0.001370</td>\n",
              "      <td>0.788501</td>\n",
              "      <td>34.220840</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>965.732911</td>\n",
              "      <td>9.664561e+04</td>\n",
              "      <td>1.109279e+06</td>\n",
              "      <td>0.490664</td>\n",
              "      <td>305.137602</td>\n",
              "      <td>107.545885</td>\n",
              "      <td>0.267153</td>\n",
              "      <td>0.170039</td>\n",
              "      <td>0.151757</td>\n",
              "      <td>0.103263</td>\n",
              "      <td>0.265826</td>\n",
              "      <td>0.236850</td>\n",
              "      <td>0.376042</td>\n",
              "      <td>0.249216</td>\n",
              "      <td>0.280428</td>\n",
              "      <td>0.111165</td>\n",
              "      <td>0.345088</td>\n",
              "      <td>0.168454</td>\n",
              "      <td>0.308909</td>\n",
              "      <td>0.273749</td>\n",
              "      <td>0.173046</td>\n",
              "      <td>0.038224</td>\n",
              "      <td>0.139863</td>\n",
              "      <td>0.039691</td>\n",
              "      <td>0.189544</td>\n",
              "      <td>0.044308</td>\n",
              "      <td>0.101286</td>\n",
              "      <td>0.052782</td>\n",
              "      <td>0.074959</td>\n",
              "      <td>0.086861</td>\n",
              "      <td>0.284539</td>\n",
              "      <td>0.037908</td>\n",
              "      <td>0.045347</td>\n",
              "      <td>0.084238</td>\n",
              "      <td>0.008330</td>\n",
              "      <td>0.013112</td>\n",
              "      <td>0.065106</td>\n",
              "      <td>0.084976</td>\n",
              "      <td>0.041866</td>\n",
              "      <td>0.061877</td>\n",
              "      <td>0.067319</td>\n",
              "      <td>0.036984</td>\n",
              "      <td>0.408372</td>\n",
              "      <td>15.961965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>1.000000e-02</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>5.000000e+01</td>\n",
              "      <td>2.000000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>720.000000</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>21.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>15.000000</td>\n",
              "      <td>7.875000e+02</td>\n",
              "      <td>5.000000e+03</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>720.000000</td>\n",
              "      <td>38.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>33.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>63.000000</td>\n",
              "      <td>4.609000e+03</td>\n",
              "      <td>1.500000e+04</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>864.000000</td>\n",
              "      <td>72.666667</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>48.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>219382.000000</td>\n",
              "      <td>2.033899e+07</td>\n",
              "      <td>1.663614e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2208.000000</td>\n",
              "      <td>6100.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>85.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             backers  usd_pledged_real  ...     country_US       name_len\n",
              "count  331462.000000      3.314620e+05  ...  331462.000000  331462.000000\n",
              "mean      116.456315      9.939989e+03  ...       0.788501      34.220840\n",
              "std       965.732911      9.664561e+04  ...       0.408372      15.961965\n",
              "min         0.000000      0.000000e+00  ...       0.000000       1.000000\n",
              "25%         2.000000      5.000000e+01  ...       1.000000      21.000000\n",
              "50%        15.000000      7.875000e+02  ...       1.000000      33.000000\n",
              "75%        63.000000      4.609000e+03  ...       1.000000      48.000000\n",
              "max    219382.000000      2.033899e+07  ...       1.000000      85.000000\n",
              "\n",
              "[8 rows x 44 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7rOxpNH_W8Hj"
      },
      "source": [
        "**HeatMap**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fBKzBjO0vMmZ"
      },
      "source": [
        "def corr_plot(features, fig_size):\n",
        "  corr = kick[features].corr()\n",
        "  fig, ax =  plt.subplots(figsize=fig_size)\n",
        "  sns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns, ax=ax, linewidths=0.01)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 672
        },
        "id": "2HNXxEvoZNGf",
        "outputId": "a0a9dcc6-6ca4-4310-e73d-98c31de6ad10"
      },
      "source": [
        "corr_plot(['success', 'Duration', 'usd_goal_real', 'usd_pledged_real', 'backers', 'avg_backers', 'name_len'], (10,10))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "0ocBQ0B5aXgf",
        "outputId": "0e7dd192-7d9f-4994-fb1e-ce7c0479d83e"
      },
      "source": [
        "corr_plot(['success', 'country_AT', 'country_AU', 'country_BE',\n",
        "       'country_CA', 'country_CH', 'country_DE', 'country_DK', 'country_ES',\n",
        "       'country_FR', 'country_GB', 'country_HK', 'country_IE', 'country_IT',\n",
        "       'country_JP', 'country_LU', 'country_MX', 'country_NL', 'country_NO',\n",
        "       'country_NZ', 'country_SE', 'country_SG', 'country_US'], (20,20))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1440 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Ayejfu2abfHE",
        "outputId": "5dbe4507-f9a2-45e1-bb30-dd8fd0ed1e88"
      },
      "source": [
        "corr_plot(['success','main_category_Art', 'main_category_Comics',\n",
        "       'main_category_Crafts', 'main_category_Dance', 'main_category_Design',\n",
        "       'main_category_Fashion', 'main_category_Film & Video',\n",
        "       'main_category_Food', 'main_category_Games', 'main_category_Journalism',\n",
        "       'main_category_Music', 'main_category_Photography',\n",
        "       'main_category_Publishing', 'main_category_Technology',\n",
        "       'main_category_Theater'], (20,20))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1440 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aIiXdFHgb3tA",
        "outputId": "e8dbd87d-ea1b-4d46-c0fc-6b64d738beb6"
      },
      "source": [
        "(kick.usd_pledged_real/(kick.Duration+1)).describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    331462.000000\n",
              "mean         12.863472\n",
              "std         120.363535\n",
              "min           0.000000\n",
              "25%           0.059406\n",
              "50%           1.058252\n",
              "75%           6.210852\n",
              "max       26448.616736\n",
              "dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IS3vP-g2J8Dg"
      },
      "source": [
        "kick.drop('name', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "19PV0fFCGqGu"
      },
      "source": [
        "kick.drop('state', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LTa3Nfp4Skto",
        "outputId": "f3f0d938-2911-4cbc-ef1d-70eae2bb5790"
      },
      "source": [
        "kick.columns"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['deadline', 'launched', 'backers', 'usd_pledged_real', 'usd_goal_real',\n",
              "       'success', 'Duration', 'avg_backers', 'main_category_Art',\n",
              "       'main_category_Comics', 'main_category_Crafts', 'main_category_Dance',\n",
              "       'main_category_Design', 'main_category_Fashion',\n",
              "       'main_category_Film & Video', 'main_category_Food',\n",
              "       'main_category_Games', 'main_category_Journalism',\n",
              "       'main_category_Music', 'main_category_Photography',\n",
              "       'main_category_Publishing', 'main_category_Technology',\n",
              "       'main_category_Theater', 'country_AT', 'country_AU', 'country_BE',\n",
              "       'country_CA', 'country_CH', 'country_DE', 'country_DK', 'country_ES',\n",
              "       'country_FR', 'country_GB', 'country_HK', 'country_IE', 'country_IT',\n",
              "       'country_JP', 'country_LU', 'country_MX', 'country_NL', 'country_NO',\n",
              "       'country_NZ', 'country_SE', 'country_SG', 'country_US', 'name_len'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "03tzncjWSNhW"
      },
      "source": [
        "kick.drop('launched', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NqGKqKqsSyTA"
      },
      "source": [
        "kick.drop('deadline', axis=1, inplace=True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-pyCdzsRS6Dx",
        "outputId": "5a27921d-367a-4d05-bfbe-e1ac28de86aa"
      },
      "source": [
        "kick.info"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<bound method DataFrame.info of         backers  usd_pledged_real  ...  country_US  name_len\n",
              "0             0               0.0  ...           0        31\n",
              "1            15            2421.0  ...           1        45\n",
              "2             3             220.0  ...           1        14\n",
              "3             1               1.0  ...           1        49\n",
              "5           224           52375.0  ...           1        20\n",
              "...         ...               ...  ...         ...       ...\n",
              "378654        4             154.0  ...           1        37\n",
              "378657        5             155.0  ...           1         9\n",
              "378658        1              20.0  ...           1        71\n",
              "378659        6             200.0  ...           1        24\n",
              "378660       17             524.0  ...           1        33\n",
              "\n",
              "[331462 rows x 44 columns]>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "AINLnJ9ddXnd"
      },
      "source": [
        "**ML CLASSIFICATION MODEL**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j-xc9yRqdTQk"
      },
      "source": [
        "import sklearn\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.metrics import make_scorer, accuracy_score\n",
        "def RFC_model(randomState, X_train, X_test, y_train, y_test):\n",
        "    '''\n",
        "    INPUT:\n",
        "            randomState - the random state parameter for random forest classifier\n",
        "            X_train - training set split for the independent variables\n",
        "            X_test - testing set split for independent variables\n",
        "            y_train - training set split for the dependent variables\n",
        "            y_test - testing set split for the dependent variables\n",
        "    OUTPUT: prints accuracy of the random forest classifier\n",
        "    '''\n",
        "    rand_forest = RandomForestClassifier()\n",
        "    rand_forest.fit(X_train, y_train)\n",
        "    forest_test_predictions = rand_forest.predict(X_test)\n",
        "    print(accuracy_score(y_test, forest_test_predictions))\n",
        "    return rand_forest"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LIB4KHivIrlC"
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(kick.drop(['success'], axis='columns').values,kick.success, test_size=0.2, random_state=0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yeoEDnKOKXv4",
        "outputId": "7ec7d51f-5766-4fec-fb8b-76888eabc8a5"
      },
      "source": [
        "rand_forest = RFC_model(41, X_train, X_test, y_train, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.9949919297663403\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KNPLGwScLPCm",
        "outputId": "0e586250-6e47-4848-cf9f-28d1ce214eaf"
      },
      "source": [
        "rand_forest.feature_importances_.round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.274, 0.331, 0.245, 0.017, 0.096, 0.001, 0.001, 0.   , 0.001,\n",
              "       0.002, 0.001, 0.001, 0.001, 0.002, 0.   , 0.004, 0.   , 0.001,\n",
              "       0.004, 0.002, 0.   , 0.   , 0.   , 0.001, 0.   , 0.   , 0.   ,\n",
              "       0.   , 0.   , 0.001, 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,\n",
              "       0.   , 0.   , 0.   , 0.   , 0.   , 0.001, 0.012])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wc8EvH8TLzO3"
      },
      "source": [
        "def print_important_features(features, df):\n",
        "  for col in features:\n",
        "    print(df.columns[col])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YHG-0qTxRo6S",
        "outputId": "f7230cac-b2ae-4e7b-eba3-ae42da10f23d"
      },
      "source": [
        "print_important_features([0,1,2,3,4,40], kick.drop(['success', 'usd_pledged_real', 'backers'], axis='columns'))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "usd_goal_real\n",
            "Duration\n",
            "avg_backers\n",
            "main_category_Art\n",
            "main_category_Comics\n",
            "name_len\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g4Rcm3Ivje0H"
      },
      "source": [
        "X_train_2, X_test_2, y_train_2, y_test_2 = train_test_split(\n",
        "    kick.drop(['success', 'usd_pledged_real', 'backers'], axis='columns').values, \n",
        "    kick.success, test_size=0.2, random_state=0)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b-17DZ4qj1UI",
        "outputId": "0c4afe3d-2ee3-4eda-80d1-ccb468825c83"
      },
      "source": [
        "rand_forest = RFC_model(42, X_train_2, X_test_2, y_train_2, y_test_2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.8018493656947189\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kg_9InUrkPPP",
        "outputId": "39f2b683-a790-4a37-ca12-d6eae854f87f"
      },
      "source": [
        "rand_forest.feature_importances_.round(3)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.212, 0.087, 0.494, 0.003, 0.005, 0.002, 0.002, 0.003, 0.004,\n",
              "       0.004, 0.003, 0.006, 0.001, 0.007, 0.002, 0.003, 0.005, 0.004,\n",
              "       0.   , 0.002, 0.   , 0.002, 0.   , 0.001, 0.001, 0.001, 0.001,\n",
              "       0.003, 0.   , 0.   , 0.001, 0.   , 0.   , 0.001, 0.001, 0.   ,\n",
              "       0.001, 0.001, 0.   , 0.005, 0.13 ])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mlsiieHYkshS"
      },
      "source": [
        "def print_important_features(features, df):\n",
        "    '''\n",
        "    INPUT: \n",
        "        features- the column number of feature you want to print\n",
        "        df - the df you want to do this operation on\n",
        "    OUTPU: prints the name of each feature that you have chosen\n",
        "    '''\n",
        "    for col in features:\n",
        "        print(df.columns[col])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zsAM0DqSkynn",
        "outputId": "482cea1b-1ec4-47fb-8b90-df37126e5aca"
      },
      "source": [
        "print_important_features([0,1,2,12,14,17,40,], kick.drop(['success', 'usd_pledged_real', 'backers'], axis='columns'))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "usd_goal_real\n",
            "Duration\n",
            "avg_backers\n",
            "main_category_Journalism\n",
            "main_category_Photography\n",
            "main_category_Theater\n",
            "name_len\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zCp9P2UuVzM4"
      },
      "source": [
        "# parameters ={'n_estimators':[5,10,15,20],\n",
        "#              'max_depth':[None, 2,5,10,15],\n",
        "#              'min_samples_split':[2,4,8]}\n",
        "# clf = RandomForestClassifier(random_state=42)\n",
        "# scorer = make_scorer(accuracy_score)\n",
        "# grid_obj = GridSearchCV(clf, parameters, scoring=scorer)\n",
        "# grid_fit = grid_obj.fit(X_train, y_train)\n",
        "# best_clf = grid_fit.best_estimator_"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EGP_plajbO-Z"
      },
      "source": [
        "# predicitions = best_clf.predict(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m4ezIfFUfr38"
      },
      "source": [
        "# print(accuracy_score(y_test, predicitions))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fCC6oiq-fxsD"
      },
      "source": [
        "# best_clf.feature_importances_.round(3)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "urXkamqrf7jV"
      },
      "source": [
        "# print_important_features([0,1,2,40], kick.drop(['success', 'usd_pledged_real', 'backers'], axis='columns'))"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4yzVqp5hhXtT"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}